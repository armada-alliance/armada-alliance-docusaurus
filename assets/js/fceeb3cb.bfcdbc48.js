"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[1826],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return a?n.createElement(g,i(i({ref:t},p),{},{components:a})):n.createElement(g,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),o=a(6010),i=a(2389),l=a(7392),s=a(7094),u=a(2466);const p="tabList__CuJ",d="tabItem_LNqP";function c(e){var t;const{lazy:a,block:i,defaultValue:c,values:m,groupId:g,className:y}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),k=(0,l.l)(b,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===c?c:c??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,s.U)(),[N,T]=(0,r.useState)(f),O=[],{blockElementScrollPositionUntilNextRender:P}=(0,u.o5)();if(null!=g){const e=v[g];null!=e&&e!==N&&b.some((t=>t.value===e))&&T(e)}const _=e=>{const t=e.currentTarget,a=O.indexOf(t),n=b[a].value;n!==N&&(P(t),T(n),null!=g&&w(g,String(n)))},E=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;a=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;a=O[t]??O[O.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},y)},b.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>O.push(e),onKeyDown:E,onFocus:_,onClick:_},i,{className:(0,o.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":N===t})}),a??t)}))),a?(0,r.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,i.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},7322:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),o=a(5488),i=a(5162);const l={description:"Generate a strong ssh keypair, boot your Raspberry Pi, copy ssh pub key and login"},s="Logging in Securely",u={unversionedId:"stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/logging-in-securely",id:"stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/logging-in-securely",title:"Logging in Securely",description:"Generate a strong ssh keypair, boot your Raspberry Pi, copy ssh pub key and login",source:"@site/docs/stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/logging-in-securely.md",sourceDirName:"stake-pool-guides/pi-pool-tutorial/pi-node-full-guide",slug:"/stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/logging-in-securely",permalink:"/docs/stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/logging-in-securely",draft:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/logging-in-securely.md",tags:[],version:"current",frontMatter:{description:"Generate a strong ssh keypair, boot your Raspberry Pi, copy ssh pub key and login"},sidebar:"tutorialSidebar",previous:{title:"Download & Flash",permalink:"/docs/stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/download-and-flash"},next:{title:"User Setup",permalink:"/docs/stake-pool-guides/pi-pool-tutorial/pi-node-full-guide/user-setup"}},p={},d=[{value:"Create a new ssh key pair",id:"create-a-new-ssh-key-pair",level:2},{value:"Boot your Pi &amp; login",id:"boot-your-pi--login",level:2},{value:"Login credentials",id:"login-credentials",level:3},{value:"Obtain IPv4 address",id:"obtain-ipv4-address",level:3},{value:"Copy ssh pub key to new server",id:"copy-ssh-pub-key-to-new-server",level:2},{value:"Log into your server with ssh",id:"log-into-your-server-with-ssh",level:2}],c={toc:d};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"logging-in-securely"},"Logging in Securely"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"It is assumed that you are using a Linux or Mac operating system with native support for ssh as your ",(0,r.kt)("strong",{parentName:"p"},"local machine"),". Or, if using Windows have a tool set that will work with this guide. Perhaps now is the time to switch to Linux and not look back. ",(0,r.kt)("a",{parentName:"p",href:"https://elementary.io/"},"https://elementary.io/"),".")),(0,r.kt)("h2",{id:"create-a-new-ssh-key-pair"},"Create a new ssh key pair"),(0,r.kt)("p",null,"Open a terminal on the machine you want to remote in ",(0,r.kt)("strong",{parentName:"p"},"from"),"(local machine), your laptop or workstation for example."),(0,r.kt)("p",null,"Create a new password protected ED25519 key pair on your local machine. Give the key a unique name and password protect it when prompted."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"ssh-keygen -a 64 -t ed25519 -f ~/.ssh/<unique_keyname>\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://man.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/ssh-keygen.1#a"},(0,r.kt)("inlineCode",{parentName:"a"},"-a"))," rounds When saving a private key, this option specifies the number of KDF ","(","key derivation function, currently ",(0,r.kt)("a",{parentName:"p",href:"https://man.openbsd.org/bcrypt_pbkdf.3"},"bcrypt_pbkdf","(","3",")"),")"," rounds used."),(0,r.kt)("p",{parentName:"admonition"},"Higher numbers result in slower passphrase verification and increased resistance to brute-force password cracking ","(","should the keys be stolen",")",". The default is 16 rounds."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://flak.tedunangst.com/post/new-openssh-key-format-and-bcrypt-pbkdf"},"https://flak.tedunangst.com/post/new-openssh-key-format-and-bcrypt-pbkdf"))),(0,r.kt)("p",null,"Your new key pair will be located in ~/.ssh"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"cd $HOME/.ssh\nls -al\n")),(0,r.kt)("h2",{id:"boot-your-pi--login"},"Boot your Pi & login"),(0,r.kt)("p",null,"Plug in a network cable connected to your router and boot your new image."),(0,r.kt)("h3",{id:"login-credentials"},"Login credentials"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"\ud83c\udf1f Default Pi-Node Credentials"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\ud83e\udd8d Default Ubuntu Credentials"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\ud83c\udf53 Default Raspbian Credentials"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"username = ada"),(0,r.kt)("td",{parentName:"tr",align:"left"},"username = ubuntu"),(0,r.kt)("td",{parentName:"tr",align:"left"},"username = pi")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"password = lovelace"),(0,r.kt)("td",{parentName:"tr",align:"left"},"password = ubuntu"),(0,r.kt)("td",{parentName:"tr",align:"left"},"password = raspberry")))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The Pi-Node & Ubuntu images will prompt you to change your password & login with new credentials.")),(0,r.kt)("h3",{id:"obtain-ipv4-address"},"Obtain IPv4 address"),(0,r.kt)("p",null,"Either log into your router and locate the address assigned by it's dhcp server or connect a monitor. Write the Pi's IPv4 address down."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"hostname -I | cut -f1 -d' '\n")),(0,r.kt)("h2",{id:"copy-ssh-pub-key-to-new-server"},"Copy ssh pub key to new server"),(0,r.kt)("p",null,"Add your newly created public key to the Pi's authorized_keys file using ssh-copy-id. This will allow you to login remotely without a password."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Pressing the tab key is an auto complete feature in terminal."),(0,r.kt)("p",{parentName:"admonition"},"Getting into the habit of constantly hitting tab will speed things up, give insight into options available and prevent typos. In this case ssh-copy-id will give you a list of available public keys if you hit tab a couple times after using the -i switch. Start typing the name of your key and hit tab to auto complete the name of your ed25519 public key.")),(0,r.kt)("p",null,"Enter the default password associated with your img.gz."),(0,r.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"Pi-Node",label:"Pi-Node",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"  ssh-copy-id -i <unique-keyname.pub> ada@<server-ip>\n"))),(0,r.kt)(i.Z,{value:"Ubuntu",label:"Ubuntu",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"  ssh-copy-id -i <unique-keyname.pub> ubuntu@<server-ip>\n"))),(0,r.kt)(i.Z,{value:"Raspbian",label:"Raspbian",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"  ssh-copy-id -i <unique-keyname.pub> pi@<server-ip>\n")))),(0,r.kt)("p",null,"ssh should return 1 key added and suggest a command for you to try logging into your new server."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Number of key","(","s",")"," added: 1")),(0,r.kt)("h2",{id:"log-into-your-server-with-ssh"},"Log into your server with ssh"),(0,r.kt)("p",null,"Now try logging into the machine, with:"),(0,r.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"Pi-Node",label:"Pi-Node",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"  ssh ada@<server-ip>\n"))),(0,r.kt)(i.Z,{value:"Ubuntu",label:"Ubuntu",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"  ssh ubuntu@<server-ip>\n"))),(0,r.kt)(i.Z,{value:"Raspbian",label:"Raspbian",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=">_ Terminal"',title:'">_','Terminal"':!0},"  ssh pi@<server-ip>\n")))),(0,r.kt)("p",null,"Run the suggestion and you should be greeted with your remote shell. Congratulations! \ud83e\udd73"))}m.isMDXComponent=!0}}]);