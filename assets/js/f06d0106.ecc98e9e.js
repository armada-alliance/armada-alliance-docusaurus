"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[4300],{9775:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var i=a(4848),r=a(8453),s=a(1470),t=a(9365);const o={},l="Dynamic Build",d={id:"stake-pool-guides/updating-a-cardano-node/using-dynamic-build",title:"Dynamic Build",description:"We at the Armada Alliance actively build the required software packages needed to run a Cardano stake pool node on ARM-based computers like the Raspberry Pi or Apple's MacMini M1._",source:"@site/docs/stake-pool-guides/updating-a-cardano-node/using-dynamic-build.mdx",sourceDirName:"stake-pool-guides/updating-a-cardano-node",slug:"/stake-pool-guides/updating-a-cardano-node/using-dynamic-build",permalink:"/docs/stake-pool-guides/updating-a-cardano-node/using-dynamic-build",draft:!1,unlisted:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/stake-pool-guides/updating-a-cardano-node/using-dynamic-build.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Updating a Cardano Node",permalink:"/docs/stake-pool-guides/updating-a-cardano-node"},next:{title:"Static Build",permalink:"/docs/stake-pool-guides/updating-a-cardano-node/static-build"}},c={},u=[{value:"To use our dynamic arm64 cardano-node build requires libsodium and secp256k1.",id:"to-use-our-dynamic-arm64-cardano-node-build-requires-libsodium-and-secp256k1",level:4},{value:"Current Official Cardano Node Version: 8.1.2",id:"current-official-cardano-node-version-812",level:4},{value:"Overview \ud83d\uddd2",id:"overview-",level:3},{value:"Prerequisites for Ubuntu 20.04",id:"prerequisites-for-ubuntu-2004",level:2},{value:"For Ubuntu 22.04 LTS fresh install (missing libssl.so.1.1)",id:"for-ubuntu-2204-lts-fresh-install-missing-libsslso11",level:3},{value:"Building Libsodium",id:"building-libsodium",level:2},{value:"Instructions to install libsodium",id:"instructions-to-install-libsodium",level:3},{value:"Instructions to install secp256k1",id:"instructions-to-install-secp256k1",level:3},{value:"Download the cardano-node &amp; cli",id:"download-the-cardano-node--cli",level:2},{value:"Check if cardano-node is running already",id:"check-if-cardano-node-is-running-already",level:3},{value:"Replace the old binaries and config files with the new ones",id:"replace-the-old-binaries-and-config-files-with-the-new-ones",level:2},{value:"Check your cardano-node version",id:"check-your-cardano-node-version",level:3},{value:"Output:",id:"output",level:4},{value:"Check your cardano-cli version",id:"check-your-cardano-cli-version",level:3},{value:"Output:",id:"output-1",level:4},{value:"Replace the Cardano node configuration files",id:"replace-the-cardano-node-configuration-files",level:3},{value:"Restart the Cardano Node",id:"restart-the-cardano-node",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"dynamic-build",children:"Dynamic Build"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"We at the Armada Alliance actively build the required software packages needed to run a Cardano stake pool node on ARM-based computers like the Raspberry Pi or Apple's MacMini M1."}),"_"]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.h4,{id:"to-use-our-dynamic-arm64-cardano-node-build-requires-libsodium-and-secp256k1",children:"To use our dynamic arm64 cardano-node build requires libsodium and secp256k1."})}),"\n",(0,i.jsx)(n.admonition,{type:"success",children:(0,i.jsxs)(n.h4,{id:"current-official-cardano-node-version-812",children:["Current Official Cardano Node Version: ",(0,i.jsx)(n.a,{href:"https://github.com/input-output-hk/cardano-node",children:"8.1.2"})]})}),"\n",(0,i.jsx)(n.h3,{id:"overview-",children:"Overview \ud83d\uddd2"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Check if libsodium is installed on the local machine","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Build libsodium if not installed already"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Download Cardano Node Dynamic build & configuration file"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Extract the file's content"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Check if you already have Cardano Node service running","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Safely shutdown your Cardano node if it is running"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace the old binaries with the new cardano-node and cardano-cli"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Check cardano-node and cli version is updated to the current version"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace old configuration files with new ones (if needed)"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Restart your Cardano Node"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Check that node has started properly"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites-for-ubuntu-2004",children:"Prerequisites for Ubuntu 20.04"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"sudo apt install automake build-essential pkg-config libffi-dev libgmp-dev libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev make g++ tmux git jq wget libncursesw5 libtool autoconf liblmdb-dev -y\n"})}),"\n",(0,i.jsx)(n.h3,{id:"for-ubuntu-2204-lts-fresh-install-missing-libsslso11",children:"For Ubuntu 22.04 LTS fresh install (missing libssl.so.1.1)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"wget http://ports.ubuntu.com/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2_arm64.deb\n\nsudo dpkg -i libssl1.1_1.1.1f-1ubuntu2_arm64.deb\n\nrm libssl1.1_1.1.1f-1ubuntu2_arm64.deb\n"})}),"\n",(0,i.jsx)(n.h2,{id:"building-libsodium",children:"Building Libsodium"}),"\n",(0,i.jsx)(n.p,{children:"Check if libsodium is already installed first."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"which libsodium\n"})}),"\n",(0,i.jsx)(n.p,{children:"If this returns no output you need to install libsodium."}),"\n",(0,i.jsx)(n.h3,{id:"instructions-to-install-libsodium",children:"Instructions to install libsodium"}),"\n",(0,i.jsx)(n.p,{children:"Create a working directory for your builds:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"mkdir -p ~/src\ncd ~/src\n"})}),"\n",(0,i.jsx)(n.p,{children:"Download and install libsodium:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"git clone https://github.com/input-output-hk/libsodium\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd libsodium\ngit checkout dbb48cce5429cb6585c9034f002568964f1ce567\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"./autogen.sh\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"./configure\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"make\nsudo make install\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add the following to your .bashrc file and source it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:'echo "export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"" >> ~/.bashrc\n\necho "export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"" >> ~/.bashrc\n\nsource ~/.bashrc\n'})}),"\n",(0,i.jsx)(n.h3,{id:"instructions-to-install-secp256k1",children:"Instructions to install secp256k1"}),"\n",(0,i.jsx)(n.p,{children:"Create a working directory if you have not already"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"mkdir -p ~/src && cd ~/src\n"})}),"\n",(0,i.jsx)(n.p,{children:"Download and install secp256k1"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"git clone https://github.com/bitcoin-core/secp256k1.git\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd secp256k1\ngit checkout ac83be33\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"git reset --hard $SECP256K1_REF\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"./autogen.sh\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"./configure  --enable-module-schnorrsig --enable-experimental\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"make\nsudo make install\n"})}),"\n",(0,i.jsx)(n.p,{children:"For those who run cardano-node as a systemd service, run the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo ldconfig\n"})}),"\n",(0,i.jsx)(n.p,{children:"This ensures the system is aware of libsodium (not just at the user level)."}),"\n",(0,i.jsx)(n.h2,{id:"download-the-cardano-node--cli",children:"Download the cardano-node & cli"}),"\n",(0,i.jsxs)(n.p,{children:["Dynamic binaries and Cardano node configuration files provided by ",(0,i.jsx)(n.a,{href:"https://armada-alliance.com/stake-pools/cc1b1c03798884c636703443a23b8d9e827d6c0417921600394198a0",children:"SRN pool "}),"\ud83d\ude4f"," at our ",(0,i.jsx)(n.a,{href:"https://github.com/armada-alliance/cardano-node-binaries",children:"Github repository"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"wget -O cardano-8_1_2-aarch64-ubuntu_2004.zip https://github.com/armada-alliance/cardano-node-binaries/blob/main/dynamic-binaries/8.1.2/cardano-8_1_2-aarch64-ubuntu_2004.zip?raw=true\n"})}),"\n",(0,i.jsx)(n.p,{children:"Extract the content from the zip file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"unzip cardano-8_1_2-aarch64-ubuntu_2004.zip\n"})}),"\n",(0,i.jsx)(n.h3,{id:"check-if-cardano-node-is-running-already",children:"Check if cardano-node is running already"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Now we need to make sure we do not have a cardano-node already running. If we do we must shut it down before proceeding."})})}),"\n",(0,i.jsxs)(n.p,{children:["You can check if you have a cardano-node process already running a few ways like using",(0,i.jsx)(n.code,{children:"htop"})," or by checking your systemd service."]}),"\n",(0,i.jsxs)(n.p,{children:["If you have been following our ",(0,i.jsx)(n.a,{href:"../pi-pool-tutorial/",children:"Pi-Node guide"})," you can check your cardano-node status and stop it using the following commands."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-service status\ncardano-service stop\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If you use Linux's ",(0,i.jsx)(n.code,{children:"htop"})," service just check for a processing running starting with ",(0,i.jsx)(n.code,{children:"cardano-node run"})," and use ",(0,i.jsx)(n.code,{children:"SIGINT"})," to terminate the process."]})}),"\n",(0,i.jsx)(n.h2,{id:"replace-the-old-binaries-and-config-files-with-the-new-ones",children:"Replace the old binaries and config files with the new ones"}),"\n",(0,i.jsxs)(n.p,{children:["If you are using the ",(0,i.jsx)(n.a,{href:"../pi-pool-tutorial/",children:"Pi-Node guide"})," and your cardano-node & cli in ",(0,i.jsx)(n.code,{children:"~/.local/bin"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"mv cardano-8_1_2-aarch64-ubuntu_2004/* ~/.local/bin\n"})}),"\n",(0,i.jsx)(n.h3,{id:"check-your-cardano-node-version",children:"Check your cardano-node version"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-node --version\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output",children:"Output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-node 8.1.2 - linux-aarch64 - ghc-8.10\ngit rev d2d90b48c5577b4412d5c9c9968b55f8ab4b9767\n"})}),"\n",(0,i.jsx)(n.h3,{id:"check-your-cardano-cli-version",children:"Check your cardano-cli version"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-cli --version\n"})}),"\n",(0,i.jsx)(n.h4,{id:"output-1",children:"Output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-cli 8.1.2 - linux-aarch64 - ghc-8.10\ngit rev d2d90b48c5577b4412d5c9c9968b55f8ab4b9767\n"})}),"\n",(0,i.jsx)(n.h3,{id:"replace-the-cardano-node-configuration-files",children:"Replace the Cardano node configuration files"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This step is not needed every time you update your node, typically you only need to update/replace config files after hard fork events when moving into new eras of the ",(0,i.jsx)(n.a,{href:"https://roadmap.cardano.org/en/",children:"Cardano blockchain"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:"Download the configuration files needed for the networks, now we just need to move them to our pool files directory."}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(t.A,{value:"Mainnet",label:"Mainnet",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd $NODE_FILES\nwget https://book.world.dev.cardano.org/environments/mainnet/config.json\nwget https://book.world.dev.cardano.org/environments/mainnet/byron-genesis.json\nwget https://book.world.dev.cardano.org/environments/mainnet/shelley-genesis.json\nwget https://book.world.dev.cardano.org/environments/mainnet/alonzo-genesis.json\nwget https://book.world.dev.cardano.org/environments/mainnet/topology.json\nwget https://book.world.dev.cardano.org/environments/mainnet/conway-genesis.json\n"})})}),(0,i.jsx)(t.A,{value:"Pre-Production",label:"Pre-Production",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd $NODE_FILES\nwget https://book.world.dev.cardano.org/environments/preprod/config.json\nwget https://book.world.dev.cardano.org/environments/preprod/byron-genesis.json\nwget https://book.world.dev.cardano.org/environments/preprod/shelley-genesis.json\nwget https://book.world.dev.cardano.org/environments/preprod/alonzo-genesis.json\nwget https://book.world.dev.cardano.org/environments/preprod/topology.json\nwget https://book.world.dev.cardano.org/environments/preprod/conway-genesis.json\n"})})}),(0,i.jsx)(t.A,{value:"Preview",label:"Preview",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd $NODE_FILES\nwget https://book.world.dev.cardano.org/environments/preview/config.json\nwget https://book.world.dev.cardano.org/environments/preview/byron-genesis.json\nwget https://book.world.dev.cardano.org/environments/preview/shelley-genesis.json\nwget https://book.world.dev.cardano.org/environments/preview/alonzo-genesis.json\nwget https://book.world.dev.cardano.org/environments/preview/topology.json\nwget https://book.world.dev.cardano.org/environments/preview/conway-genesis.json\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"restart-the-cardano-node",children:"Restart the Cardano Node"}),"\n",(0,i.jsxs)(n.p,{children:["Now we just need to restart our cardano-node service if you are using our ",(0,i.jsx)(n.a,{href:"../pi-pool-tutorial/",children:"Pi-Node guide"})," use this command"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-service start\n"})}),"\n",(0,i.jsx)(n.p,{children:"Wait a few seconds or so then check the status"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-service status\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9365:(e,n,a)=>{a.d(n,{A:()=>t});a(6540);var i=a(8215);const r={tabItem:"tabItem_Ymn6"};var s=a(4848);function t(e){let{children:n,hidden:a,className:t}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,t),hidden:a,children:n})}},1470:(e,n,a)=>{a.d(n,{A:()=>y});var i=a(6540),r=a(8215),s=a(3104),t=a(6347),o=a(205),l=a(7485),d=a(1682),c=a(679);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:i,default:r}}=e;return{value:n,label:a,attributes:i,default:r}}))}(a);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function p(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:a}=e;const r=(0,t.W6)(),s=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,l.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function g(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,s=h(e),[t,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=a.find((e=>e.default))??a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[d,u]=m({queryString:a,groupId:r}),[g,b]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,c.Dv)(a);return[r,(0,i.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),x=(()=>{const e=d??g;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{x&&l(x)}),[x]);return{selectedValue:t,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var b=a(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=a(4848);function j(e){let{className:n,block:a,selectedValue:i,selectValue:t,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const n=e.currentTarget,a=l.indexOf(n),r=o[a].value;r!==i&&(d(n),t(r))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n),children:o.map((e=>{let{value:n,label:a,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...s,className:(0,r.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":i===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:r}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function w(e){const n=g(e);return(0,f.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,f.jsx)(j,{...n,...e}),(0,f.jsx)(v,{...n,...e})]})}function y(e){const n=(0,b.A)();return(0,f.jsx)(w,{...e,children:u(e.children)},String(n))}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var i=a(6540);const r={},s=i.createContext(r);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);