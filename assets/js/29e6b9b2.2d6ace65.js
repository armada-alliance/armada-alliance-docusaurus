"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[846],{3905:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>m});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=t.createContext({}),c=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},p=function(e){var a=c(e.components);return t.createElement(i.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||s;return n?t.createElement(h,l(l({ref:a},p),{},{components:n})):t.createElement(h,l({ref:a},p))}));function m(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var s=n.length,l=new Array(s);l[0]=u;var r={};for(var i in a)hasOwnProperty.call(a,i)&&(r[i]=a[i]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var c=2;c<s;c++)l[c]=n[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4025:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var t=n(7462),o=(n(7294),n(3905));const s={},l="cardano-node on Asahi Arch Linux, Apple Silicon",r={unversionedId:"cardano-developer-guides/arch-linux-os",id:"cardano-developer-guides/arch-linux-os",title:"cardano-node on Asahi Arch Linux, Apple Silicon",description:"Prerequisites",source:"@site/docs/cardano-developer-guides/arch-linux-os.md",sourceDirName:"cardano-developer-guides",slug:"/cardano-developer-guides/arch-linux-os",permalink:"/docs/cardano-developer-guides/arch-linux-os",draft:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/cardano-developer-guides/arch-linux-os.md",tags:[],version:"current",frontMatter:{}},i={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Bash completion",id:"bash-completion",level:2},{value:"Locales",id:"locales",level:2},{value:"Time",id:"time",level:2},{value:"Chrony",id:"chrony",level:2},{value:"Packages",id:"packages",level:2},{value:"zram swap",id:"zram-swap",level:2},{value:"Prometheus",id:"prometheus",level:2},{value:"Grafana",id:"grafana",level:2},{value:"With Snap",id:"with-snap",level:3},{value:"Grafan-bin AUR",id:"grafan-bin-aur",level:3},{value:"Wireguard",id:"wireguard",level:2},{value:"Static ip",id:"static-ip",level:2},{value:"Hostname",id:"hostname",level:2},{value:"Server setup",id:"server-setup",level:2},{value:"sysctl",id:"sysctl",level:2},{value:"Disable the root user",id:"disable-the-root-user",level:3},{value:"Secure shared memory",id:"secure-shared-memory",level:3},{value:"Increase open file limit for $USER",id:"increase-open-file-limit-for-user",level:3},{value:"Choose testnet or mainnet.",id:"choose-testnet-or-mainnet",level:2},{value:"Create bash variables &amp; add ~/.local/bin to our $PATH \ud83c\udfc3",id:"create-bash-variables--add-localbin-to-our-path-",level:3},{value:"Retrieve node files",id:"retrieve-node-files",level:3},{value:"Build Libsodium",id:"build-libsodium",level:2},{value:"Build secp256k1",id:"build-secp256k1",level:2},{value:"LLVM 9.0.1",id:"llvm-901",level:2},{value:"ncurses5 compat libs",id:"ncurses5-compat-libs",level:2},{value:"GHCUP, GHC &amp; Cabal",id:"ghcup-ghc--cabal",level:2},{value:"Obtain cardano-node",id:"obtain-cardano-node",level:3},{value:"Systemd unit startup scripts",id:"systemd-unit-startup-scripts",level:3},{value:"gLiveView.sh",id:"gliveviewsh",level:2},{value:"Install Cronie",id:"install-cronie",level:2},{value:"topologyUpdater.sh (not needed on block producer)",id:"topologyupdatersh-not-needed-on-block-producer",level:2},{value:"Add save and exit",id:"add-save-and-exit",level:3},{value:"Display inbound connections in Grafana",id:"display-inbound-connections-in-grafana",level:2},{value:"System updates",id:"system-updates",level:2},{value:"Usefull links",id:"usefull-links",level:2}],p={toc:c};function d(e){let{components:a,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cardano-node-on-asahi-arch-linux-apple-silicon"},"cardano-node on Asahi Arch Linux, Apple Silicon"),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Asahi Arch, minimal or desktop installed."),(0,o.kt)("p",null,"log in to both alarm and root. Change the passwords."),(0,o.kt)("p",null,"Update the system as root."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -Syu\n")),(0,o.kt)("p",null,"Start and enable sshd. pw auth is disabled for root, login with alarm user."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start sshd.service\nsystemctl enable sshd.service\n")),(0,o.kt)("p",null,"Install pacman-contrib which includes sudo and some other useful packages and open the sudoers file with visudo and enable the wheel group."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -S pacman-contrib sudo git curl wget htop rsync numactl\nsudo EDITOR=nano visudo\n")),(0,o.kt)("p",null,"Like below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"## Uncomment to allow members of group wheel to execute any command\n%wheel ALL=(ALL:ALL) ALL\n\n")),(0,o.kt)("p",null,"Add a new user to the wheel group, give it a password."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"useradd -m -G wheel -s /bin/bash ada\npasswd ada\n")),(0,o.kt)("p",null,"Log out and back in as your new user with SSH. Test sudo by upgrading the system again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -Syu\n")),(0,o.kt)("p",null,'{% hint style="info" %}\nThe Arch Bash shell is boring. Optionally install ',(0,o.kt)("a",{parentName:"p",href:"https://bash-it.readthedocs.io/en/latest/installation/"},"Bash-it")," for a fancy shell.\n{% endhint %}"),(0,o.kt)("p",null,'{% hint style="warning" %}\nRemember to copy your ssh key and disable password aurthentication in sshd_config.\n{% endhint %}'),(0,o.kt)("h2",{id:"bash-completion"},"Bash completion"),(0,o.kt)("p",null,"Add 'complete -cf sudo' to the bottom of .bash_profile and source."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"echo complete -cf sudo >> ${HOME}/.bash_profile; . $HOME/.bash_profile\n")),(0,o.kt)("h2",{id:"locales"},"Locales"),(0,o.kt)("p",null,"Generate the ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.archlinux.org/title/locale"},"locales")," by uncommenting (en_US.UTF-8 UTF-8 for example) and generating."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/locale.gen\nsudo locale-gen\nsudo localectl set-locale LANG=en_US.UTF-8\n")),(0,o.kt)("h2",{id:"time"},"Time"),(0,o.kt)("p",null,"Set your timezone"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo timedatectl set-timezone America/New_York\n")),(0,o.kt)("p",null,"No more daylight savings, possible to set RTC to local? testing, might not want to do this."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo timedatectl set-local-rtc 1\n# set to 0 for UTC\n")),(0,o.kt)("h2",{id:"chrony"},"Chrony"),(0,o.kt)("p",null,"While we are messing with time.. Install and open chrony.conf and replace contents with below (use ctrl+k to cut whole lines)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S chrony\nsudo nano /etc/chrony.conf\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pool time.google.com       iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\npool time.euro.apple.com   iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\npool time.apple.com        iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\npool ntp.ubuntu.com        iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\n\n# This directive specify the location of the file containing ID/key pairs for\n# NTP authentication.\nkeyfile /etc/chrony/chrony.keys\n\n# This directive specify the file into which chronyd will store the rate\n# information.\ndriftfile /var/lib/chrony/chrony.drift\n\n# Uncomment the following line to turn logging on.\n#log tracking measurements statistics\n\n# Log files location.\nlogdir /var/log/chrony\n\n# Stop bad estimates upsetting machine clock.\nmaxupdateskew 5.0\n\n# This directive enables kernel synchronisation (every 11 minutes) of the\n# real-time clock. Note that it can\u2019t be used along with the 'rtcfile' directive.\nrtcsync\n\n# Step the system clock instead of slewing it if the adjustment is larger than\n# one second, but only in the first three clock updates.\nmakestep 0.1 -1\n\n# Get TAI-UTC offset and leap seconds from the system tz database\nleapsectz right/UTC\n\n# Serve time even if not synchronized to a time source.\nlocal stratum 10\n")),(0,o.kt)("p",null,'{% hint style="warning" %}\nNote: systemd-timesyncd.service is in conflict with chronyd, so you need to disable it first if you want to enable chronyd properly.\n{% endhint %}'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop systemd-timesyncd.service\nsudo systemctl disable systemd-timesyncd.service\n# enable and start chrony\nsudo systemctl start chronyd.service\nsudo systemctl enable chronyd.service\n")),(0,o.kt)("h2",{id:"packages"},"Packages"),(0,o.kt)("p",null,"Add the following packages to build and run cardano-node."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S --needed base-devel\nsudo pacman -S openssl libtool unzip jq bc xz numactl\n")),(0,o.kt)("h2",{id:"zram-swap"},"zram swap"),(0,o.kt)("p",null,"Install and create a conf file with following."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S zram-generator\nsudo nano /usr/lib/systemd/zram-generator.conf\n")),(0,o.kt)("p",null,"You may want to read up on zram. I always set 1.5 times the amount of system ram. ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/systemd/zram-generator/blob/main/man/zram-generator.conf.md"},"github")," | ",(0,o.kt)("a",{parentName:"p",href:"https://haydenjames.io/raspberry-pi-performance-add-zram-kernel-parameters/"},"Hayden James")," |\n",(0,o.kt)("a",{parentName:"p",href:"https://lists.ubuntu.com/archives/lubuntu-users/2013-October/005831.html"},"lubuntu mailing list")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[zram0]\nzram-size = min(24 * 1024)\n")),(0,o.kt)("p",null,"This will give you 24gb of zram swap and will absorb the brunt of running the built in leaderlogs. Reboot and check htop to confirm."),(0,o.kt)("h2",{id:"prometheus"},"Prometheus"),(0,o.kt)("p",null,"Install Prometheus and Prometheus-node-exporter"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S prometheus prometheus-node-exporter\n")),(0,o.kt)("h2",{id:"grafana"},"Grafana"),(0,o.kt)("p",null,"Two ways to install Grafana. From AUR or with snap. Pros and cons. Cannot install additional plugins with AUR version (looking into it). Snap is controversial security wise. I need additional plugins so built snap and installed grafana with it."),(0,o.kt)("h3",{id:"with-snap"},"With Snap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ~/git\ncd ~/git\ngit clone https://aur.archlinux.org/snapd.git\ncd snapd/\nmakepkg -si\nreboot\nsudo snap install grafana --channel=rock/edge\n")),(0,o.kt)("h3",{id:"grafan-bin-aur"},"Grafan-bin AUR"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ~/git\ncd ~/git\n\ngit clone https://aur.archlinux.org/grafana-bin.git\ncd grafana-bin\nmakepkg -si\nsudo systemctl start grafana.service\nsudo systemctl enable grafana.service\n\n")),(0,o.kt)("h2",{id:"wireguard"},"Wireguard"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S wireguard-tools\n\n")),(0,o.kt)("h2",{id:"static-ip"},"Static ip"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://wiki.archlinux.org/title/Systemd-networkd#Wired_adapter_using_a_static_IP"},"systemd")),(0,o.kt)("p",null,"Create a network service file, make sure edit it to your needs."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/network/20-wired.network\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[Match]\nName=enp3s0\n\n[Network]\nAddress=192.168.1.151/24\nGateway=192.168.1.1\nDNS=192.168.1.1\n")),(0,o.kt)("p",null,"Make sure no other network service is running like netctl, then enable and start the service. If there is a network service running stop and disable it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl --type=service\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable systemd-networkd.service\nsudo systemctl start systemd-networkd.service\n")),(0,o.kt)("p",null,"Disable/stop dhcp."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\nsudo systemctl stop dhcpcd\nsudo systemctl disable dhcpcd\nsudo reboot\n")),(0,o.kt)("h2",{id:"hostname"},"Hostname"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://wiki.archlinux.org/title/Network_configuration#Set_the_hostname"},"Set the Hostname")),(0,o.kt)("p",null,"Edit /etc/hostname"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/hostname\n")),(0,o.kt)("p",null,"and /etc/hosts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/hosts\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"127.0.0.1        localhost\n::1              localhost\n127.0.1.1        myhostname\n")),(0,o.kt)("h2",{id:"server-setup"},"Server setup"),(0,o.kt)("p",null,"Tweak/Harden system to our needs."),(0,o.kt)("h2",{id:"sysctl"},"sysctl"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://wiki.archlinux.org/title/sysctl"},"sysctl")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sysctl.d/98-cardano-node.conf\n")),(0,o.kt)("p",null,"Add the following."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"## Asahi Node ##\n\n# swap more to zram\nvm.vfs_cache_pressure = 500\nvm.swappiness = 100\nvm.dirty_background_ratio = 1\nvm.dirty_ratio = 50\n\nfs.file-max = 10000000\nfs.nr_open = 10000000\n\n# enable forwarding if using wireguard\nnet.ipv4.ip_forward = 0\n\n# ignore ICMP redirects\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\n\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\n\n# disable IPv6\n#net.ipv6.conf.all.disable_ipv6 = 1\n#net.ipv6.conf.default.disable_ipv6 = 1\n\n# block SYN attacks\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_max_syn_backlog = 2048\nnet.ipv4.tcp_synack_retries = 3\n#net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_recv=45\n\n# in progress tasks\nnet.ipv4.tcp_keepalive_time = 240\nnet.ipv4.tcp_keepalive_intvl = 4\nnet.ipv4.tcp_keepalive_probes = 5\n\n# reboot if we run out of memory\nvm.panic_on_oom = 1\nkernel.panic = 10\n")),(0,o.kt)("h3",{id:"disable-the-root-user"},"Disable the root user"),(0,o.kt)("p",null,"Use sudo to become root.."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo passwd -l root\n")),(0,o.kt)("h3",{id:"secure-shared-memory"},"Secure shared memory"),(0,o.kt)("p",null,"Mount shared memory as read only. Open /etc/fstab."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo nano /etc/fstab\n")),(0,o.kt)("p",null,"Add this line at the bottom, save & exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tmpfs    /run/shm    tmpfs    ro,noexec,nosuid    0 0\n")),(0,o.kt)("h3",{id:"increase-open-file-limit-for-user"},"Increase open file limit for $USER"),(0,o.kt)("p",null,"Add a couple lines to the bottom of /etc/security/limits.conf"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo bash -c \"echo -e '${USER} soft nofile 800000\\n${USER} hard nofile 1048576\\n' >> /etc/security/limits.conf\"\n")),(0,o.kt)("p",null,"Confirm it was added to the bottom."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cat /etc/security/limits.conf\n")),(0,o.kt)("h2",{id:"choose-testnet-or-mainnet"},"Choose testnet or mainnet."),(0,o.kt)("p",null,'{% hint style="danger" %}\nThere is a 500 \u20b3 Registration deposit and another 5 \u20b3 in registration costs to start a pool on mainnet. First time users are strongly reccomended to use testnet. You can get tada (test ada) from the testnet faucet. ',(0,o.kt)("a",{parentName:"p",href:"https://testnets.cardano.org/en/testnets/cardano/tools/faucet/"},"tada faucet link"),"\n{% endhint %}"),(0,o.kt)("p",null,"Create the directories for our project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ${HOME}/.local/bin\nmkdir -p ${HOME}/pi-pool/files\nmkdir -p ${HOME}/pi-pool/scripts\nmkdir -p ${HOME}/pi-pool/logs\nmkdir ${HOME}/git\nmkdir ${HOME}/tmp\n")),(0,o.kt)("p",null,"Create an .adaenv file, choose which network you want to be on and source the file. This file will hold the variables/settings for operating a Pi-Node. /home/ada/.adaenv"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"echo -e NODE_CONFIG=testnet >> ${HOME}/.adaenv; source ${HOME}/.adaenv\n")),(0,o.kt)("h3",{id:"create-bash-variables--add-localbin-to-our-path-"},"Create bash variables & add ","~","/.local/bin to our $PATH \ud83c\udfc3"),(0,o.kt)("p",null,'{% hint style="info" %}\n',(0,o.kt)("a",{parentName:"p",href:"https://askubuntu.com/questions/247738/why-is-etc-profile-not-invoked-for-non-login-shells/247769#247769"},"Environment Variables in Linux/Unix"),".\n{% endhint %}"),(0,o.kt)("p",null,'{% hint style="warning" %}\nYou must reload environment files after updating them. Same goes for cardano-node, changes to the topology or config files require a cardano-service restart.\n{% endhint %}'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"echo . ~/.adaenv >> ${HOME}/.bashrc\ncd .local/bin; echo \"export PATH=\\\"$PWD:\\$PATH\\\"\" >> $HOME/.adaenv\necho export NODE_HOME=${HOME}/pi-pool >> ${HOME}/.adaenv\necho export NODE_PORT=3003 >> ${HOME}/.adaenv\necho export NODE_FILES=${HOME}/pi-pool/files >> ${HOME}/.adaenv\necho export TOPOLOGY='${NODE_FILES}'/'${NODE_CONFIG}'-topology.json >> ${HOME}/.adaenv\necho export DB_PATH='${NODE_HOME}'/db >> ${HOME}/.adaenv\necho export CONFIG='${NODE_FILES}'/'${NODE_CONFIG}'-config.json >> ${HOME}/.adaenv\necho export NODE_BUILD_NUM=$(curl https://hydra.iohk.io/job/Cardano/iohk-nix/cardano-deployment/latest-finished/download/1/index.html | grep -e \"build\" | sed 's/.*build\\/\\([0-9]*\\)\\/download.*/\\1/g') >> ${HOME}/.adaenv\necho export CARDANO_NODE_SOCKET_PATH=\"${HOME}/pi-pool/db/socket\" >> ${HOME}/.adaenv\nsource ${HOME}/.bashrc; source ${HOME}/.adaenv\n")),(0,o.kt)("h3",{id:"retrieve-node-files"},"Retrieve node files"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd $NODE_FILES\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-config.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-byron-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-shelley-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-alonzo-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-topology.json\nwget -N https://raw.githubusercontent.com/input-output-hk/cardano-node/master/cardano-submit-api/config/tx-submit-mainnet-config.yaml\n")),(0,o.kt)("p",null,"Run the following to modify ${NODE","_",'CONFIG}-config.json and update TraceBlockFetchDecisions to "true" & listen on all interfaces with Prometheus Node Exporter.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sed -i ${NODE_CONFIG}-config.json \\\n    -e "s/TraceBlockFetchDecisions\\": false/TraceBlockFetchDecisions\\": true/g" \\\n    -e "s/127.0.0.1/0.0.0.0/g"\n')),(0,o.kt)("p",null,"Save & exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"source ${HOME}/.adaenv\n")),(0,o.kt)("h2",{id:"build-libsodium"},"Build Libsodium"),(0,o.kt)("p",null,"This is IOHK's fork of Libsodium. It is needed for the dynamic build binary of cardano-node."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd; cd git/\ngit clone https://github.com/input-output-hk/libsodium\ncd libsodium\ngit checkout 66f017f1\n./autogen.sh\n./configure\nmake\nsudo make install\n")),(0,o.kt)("p",null,"Add library path to ldconfig."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sudo touch /etc/ld.so.conf.d/local.conf \necho "/usr/local/lib" | sudo tee -a /etc/ld.so.conf.d/local.conf \n')),(0,o.kt)("p",null,"Echo library paths into .bashrc file and source it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'echo "export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"" >> ~/.bashrc\necho "export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"" >> ~/.bashrc\n. ~/.bashrc\n')),(0,o.kt)("p",null,"Update link cache for shared libraries and confirm."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ldconfig; ldconfig -p | grep libsodium\n")),(0,o.kt)("h2",{id:"build-secp256k1"},"Build secp256k1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone https://github.com/bitcoin-core/secp256k1.git\ncd secp256k1\ngit reset --hard $SECP256K1_REF\n./autogen.sh\n./configure  --enable-module-schnorrsig --enable-experimental\nmake\nsudo make install\n")),(0,o.kt)("p",null,"For those who run cardano-node as a systemd service, run the following:"),(0,o.kt)("p",null,"Update link cache for shared libraries and confirm."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ldconfig; ldconfig -p | grep secp256k1\n")),(0,o.kt)("h2",{id:"llvm-901"},"LLVM 9.0.1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/git\nwget https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang+llvm-9.0.1-aarch64-linux-gnu.tar.xz\ntar -xf clang+llvm-9.0.1-aarch64-linux-gnu.tar.xz\nexport PATH=~/git/clang+llvm-9.0.1-aarch64-linux-gnu/bin/:$PATH\n")),(0,o.kt)("h2",{id:"ncurses5-compat-libs"},"ncurses5 compat libs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/git\ngit clone https://aur.archlinux.org/ncurses5-compat-libs.git\ncd ncurses5-compat-libs/\ngpg --recv-key CC2AF4472167BE03\n## If this fails it is probly due to your DNS service(Google). \n## Use https://www.quad9.net/\n")),(0,o.kt)("p",null,"Change target architecture to aarch64 in the build file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano PKGBUILD\narch=(aarch64)\n")),(0,o.kt)("p",null,"and build it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"makepkg -si\n")),(0,o.kt)("p",null,"Confirm."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"clang --version\n")),(0,o.kt)("h2",{id:"ghcup-ghc--cabal"},"GHCUP, GHC & Cabal"),(0,o.kt)("p",null,"Install ghcup use defaults when asked."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},". ~/.bashrc\nghcup upgrade\nghcup install cabal 3.4.0.0\nghcup set cabal 3.4.0.0\n\nghcup install ghc 8.10.4\nghcup set ghc 8.10.4\n")),(0,o.kt)("h3",{id:"obtain-cardano-node"},"Obtain cardano-node"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd $HOME/git\ngit clone https://github.com/input-output-hk/cardano-node.git\ncd cardano-node\ngit fetch --all --recurse-submodules --tags\ngit checkout $(curl -s https://api.github.com/repos/input-output-hk/cardano-node/releases/latest | jq -r .tag_name)\n")),(0,o.kt)("p",null,"Configure with 8.10.4 set libsodium"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cabal configure -O0 -w ghc-8.10.4\n\necho -e "package cardano-crypto-praos\\n flags: -external-libsodium-vrf" > cabal.project.local\nsed -i $HOME/.cabal/config -e "s/overwrite-policy:/overwrite-policy: always/g"\nrm -rf dist-newstyle/build/aarch64-linux/ghc-8.10.4\n\n')),(0,o.kt)("p",null,"Build them."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cabal build cardano-cli cardano-node cardano-submit-api\n")),(0,o.kt)("p",null,"Add them to your PATH."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cp $(find $HOME/git/cardano-node/dist-newstyle/build -type f -name "cardano-cli") $HOME/.local/bin/\ncp $(find $HOME/git/cardano-node/dist-newstyle/build -type f -name "cardano-node") $HOME/.local/bin/\ncp $(find $HOME/git/cardano-node/dist-newstyle/build -type f -name "cardano-submit-api") $HOME/.local/bin/\n')),(0,o.kt)("p",null,"Check"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cardano-node version\ncardano-cli version\n")),(0,o.kt)("h3",{id:"systemd-unit-startup-scripts"},"Systemd unit startup scripts"),(0,o.kt)("p",null,"Create the systemd unit file and startup script so systemd can manage cardano-node."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano ${HOME}/.local/bin/cardano-service\n")),(0,o.kt)("p",null,"Paste the following, save & exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n. /home/ada/.adaenv\n\n## +RTS -N6 -RTS = Multicore(4)\ncardano-node run +RTS -N6 -RTS \\\n  --topology ${TOPOLOGY} \\\n  --database-path ${DB_PATH} \\\n  --socket-path ${CARDANO_NODE_SOCKET_PATH} \\\n  --port ${NODE_PORT} \\\n  --config ${CONFIG}\n")),(0,o.kt)("p",null,"Allow execution of our new cardano-node service file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x ${HOME}/.local/bin/cardano-service\n")),(0,o.kt)("p",null,"Open /etc/systemd/system/cardano-node.service."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/cardano-node.service\n")),(0,o.kt)("p",null,"Paste the following, You will need to edit the username here if you chose to not use ada. Save & exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# The Cardano Node Service (part of systemd)\n# file: /etc/systemd/system/cardano-node.service\n\n[Unit]\nDescription     = Cardano node service\nWants           = network-online.target\nAfter           = network-online.target\n\n[Service]\nUser            = ada\nType            = simple\nWorkingDirectory= /home/ada/pi-pool\nExecStart       = /bin/bash -c "PATH=/home/ada/.local/bin:$PATH exec /home/ada/.local/bin/cardano-service"\nKillSignal=SIGINT\nRestartKillSignal=SIGINT\nTimeoutStopSec=10\nLimitNOFILE=32768\nRestart=always\nRestartSec=10\nEnvironmentFile=-/home/ada/.adaenv\n\n[Install]\nWantedBy= multi-user.target\n')),(0,o.kt)("p",null,"Create the systemd unit file and startup script so systemd can manage cardano-submit-api."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano ${HOME}/.local/bin/cardano-submit-service\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n. /home/ada/.adaenv\n\ncardano-submit-api \\\n  --socket-path ${CARDANO_NODE_SOCKET_PATH} \\\n  --port 8090 \\\n  --config /home/ada/pi-pool/files/tx-submit-mainnet-config.yaml \\\n  --listen-address 0.0.0.0 \\\n  --mainnet\n")),(0,o.kt)("p",null,"Allow execution of our new cardano-submit-api service script."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x ${HOME}/.local/bin/cardano-submit-service\n")),(0,o.kt)("p",null,"Create /etc/systemd/system/cardano-submit.service."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/cardano-submit.service\n")),(0,o.kt)("p",null,"Paste the following, You will need to edit the username here if you chose to not use ada. save & exit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# The Cardano Submit Service (part of systemd)\n# file: /etc/systemd/system/cardano-submit.service\n\n[Unit]\nDescription     = Cardano submit service\nWants           = network-online.target\nAfter           = network-online.target\n\n[Service]\nUser            = ada\nType            = simple\nWorkingDirectory= /home/ada/pi-pool\nExecStart       = /bin/bash -c "PATH=/home/ada/.local/bin:$PATH exec /home/ada/.local/bin/cardano-submit-service"\nKillSignal=SIGINT\nRestartKillSignal=SIGINT\nTimeoutStopSec=10\nLimitNOFILE=32768\nRestart=always\nRestartSec=10\nEnvironmentFile=-/home/ada/.adaenv\n\n[Install]\nWantedBy= multi-user.target\n')),(0,o.kt)("p",null,"Reload systemd so it picks up our new service files."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\n")),(0,o.kt)("p",null,"Let's add a couple functions to the bottom of our .adaenv file to make life a little easier."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano ${HOME}/.adaenv\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cardano-service() {\n    #do things with parameters like $1 such as\n    sudo systemctl "$1" cardano-node.service\n}\n\ncardano-submit() {\n    #do things with parameters like $1 such as\n    sudo systemctl "$1" cardano-submit.service\n}\n\ncardano-monitor() {\n    #do things with parameters like $1 such as\n    sudo systemctl "$1" prometheus.service\n    sudo systemctl "$1" prometheus-node-exporter.service\n    sudo systemctl "$1" grafana-server\n}\n')),(0,o.kt)("p",null,"What we just did there was add a couple functions to control our cardano-service and cardano-submit without having to type out"),(0,o.kt)("blockquote",null,(0,o.kt)("blockquote",{parentName:"blockquote"},(0,o.kt)("p",{parentName:"blockquote"},"sudo systemctl enable cardano-node.service"),(0,o.kt)("p",{parentName:"blockquote"},"sudo systemctl start cardano-node.service"),(0,o.kt)("p",{parentName:"blockquote"},"sudo systemctl stop cardano-node.service"),(0,o.kt)("p",{parentName:"blockquote"},"sudo systemctl status cardano-node.service"))),(0,o.kt)("p",null,"Now we just have to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"cardano-service enable (enables cardano-node.service auto start at boot)"),(0,o.kt)("li",{parentName:"ul"},"cardano-service start (starts cardano-node.service)"),(0,o.kt)("li",{parentName:"ul"},"cardano-service stop (stops cardano-node.service)"),(0,o.kt)("li",{parentName:"ul"},"cardano-service status (shows the status of cardano-node.service)")),(0,o.kt)("p",null,"Or"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"cardano-submit enable (enables cardano-submit.service auto start at boot)"),(0,o.kt)("li",{parentName:"ul"},"cardano-submit start (starts cardano-submit.service)"),(0,o.kt)("li",{parentName:"ul"},"cardano-submit stop (stops cardano-submit.service)"),(0,o.kt)("li",{parentName:"ul"},"cardano-submit status (shows the status of cardano-submit.service)")),(0,o.kt)("p",null,"The submit service listens on port 8090. You can connect your Nami wallet like below to submit tx's yourself in Nami's settings."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"http://<node lan ip>:8090/api/submit/tx\n")),(0,o.kt)("h2",{id:"gliveviewsh"},"gLiveView.sh"),(0,o.kt)("p",null,"Guild operators scripts has a couple useful tools for operating a pool. We do not want the project as a whole, though there are a couple scripts we are going to use."),(0,o.kt)("p",null,'{% embed url="',(0,o.kt)("a",{parentName:"p",href:"https://github.com/cardano-community/guild-operators/tree/master/scripts/cnode-helper-scripts%22"},'https://github.com/cardano-community/guild-operators/tree/master/scripts/cnode-helper-scripts"')," %}"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd $NODE_HOME/scripts\nwget https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/env\nwget https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/gLiveView.sh\n")),(0,o.kt)("p",null,'{% hint style="info" %}\nYou can change the port cardano-node runs on in the .adaenv file in your home directory. Open the file edit the port number. Load the change into your shell & restart the cardano-node service.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano /home/ada/.adaenv\nsource /home/ada/.adaenv\ncardano-service restart\n")),(0,o.kt)("p",null,"{% endhint %}"),(0,o.kt)("p",null,"Add a line sourcing our .adaenv file to the top of the env file and adjust some paths."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sed -i env \\\n    -e "/#CNODEBIN/i. ${HOME}/.adaenv" \\\n    -e "s/\\#CNODE_HOME=\\"\\/opt\\/cardano\\/cnode\\"/CNODE_HOME=\\"\\${HOME}\\/pi-pool\\"/g" \\\n    -e "s/\\#CNODE_PORT=6000"/CNODE_PORT=\\"\'${NODE_PORT}\'\\""/g" \\\n    -e "s/\\#CONFIG=\\"\\${CNODE_HOME}\\/files\\/config.json\\"/CONFIG=\\"\\${NODE_FILES}\\/"\'${NODE_CONFIG}\'"-config.json\\"/g" \\\n    -e "s/\\#TOPOLOGY=\\"\\${CNODE_HOME}\\/files\\/topology.json\\"/TOPOLOGY=\\"\\${NODE_FILES}\\/"\'${NODE_CONFIG}\'"-topology.json\\"/g" \\\n    -e "s/\\#LOG_DIR=\\"\\${CNODE_HOME}\\/logs\\"/LOG_DIR=\\"\\${CNODE_HOME}\\/logs\\"/g"\n')),(0,o.kt)("p",null,"Allow execution of gLiveView.sh."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x gLiveView.sh\n")),(0,o.kt)("h2",{id:"install-cronie"},"Install Cronie"),(0,o.kt)("p",null,"Arch does not use cron. You can set up a systemd timer or install some other cron like scheduler."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo pacman -S cronie\n")),(0,o.kt)("p",null,"Enable & start."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable cronie.service\nsudo systemctl start cronie.service\n")),(0,o.kt)("h2",{id:"topologyupdatersh-not-needed-on-block-producer"},"topologyUpdater.sh (not needed on block producer)"),(0,o.kt)("p",null,"Until peer to peer is enabled on the network operators need a way to get a list of relays/peers to connect to. The topology updater service runs in the background with cron. Every hour the script will run and tell the service you are a relay and want to be a part of the network. It will add your relay to it's directory after four hours you should see in connections in gLiveView."),(0,o.kt)("p",null,'{% hint style="info" %}\nThe list generated will show you the distance & a clue as to where the relay is located.\n{% endhint %}'),(0,o.kt)("p",null,"Download the topologyUpdater script and have a look at it. Here is where you will enter your block producer or any other custom peers you would like to always be connected to."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/topologyUpdater.sh\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano topologyUpdater.sh\n")),(0,o.kt)("p",null,"Save, exit and make it executable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x topologyUpdater.sh\n")),(0,o.kt)("p",null,'{% hint style="warning" %}\nYou will not be able to successfully execute ./topologyUpdater.sh until you are fully synced up to the tip of the chain.\n{% endhint %}'),(0,o.kt)("p",null,"Create a cron job that will run once an hour."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"EDITOR=nano crontab -e\n")),(0,o.kt)("h3",{id:"add-save-and-exit"},"Add save and exit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"SHELL=/bin/bash\n33 * * * * . $HOME/.adaenv; $HOME/pi-pool/scripts/topologyUpdater.sh\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano $NODE_FILES/${NODE_CONFIG}-topology.json\n")),(0,o.kt)("p",null,'{% hint style="info" %}\nYou can use gLiveView.sh to view ping times in relation to the peers in your {NODE',"_","CONFIG}-topology file. Use Ping to resolve hostnames to IP's.\n{% endhint %}"),(0,o.kt)("p",null,"Changes to this file will take affect upon restarting the cardano-service."),(0,o.kt)("h2",{id:"display-inbound-connections-in-grafana"},"Display inbound connections in Grafana"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p $HOME/custom-metrics/tmp\nnano $HOME/custom-metrics/peers_in.sh\n")),(0,o.kt)("p",null,"Add following, update port # to match cardano-node port."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'INCOMING_PEERS="$(ss -tnp state established | grep "cardano-node" | awk -v port=":3003" \'$3 ~ port {print}\' | wc -l)"\necho "peers_in ${INCOMING_PEERS}" > /home/ada/custom-metrics/tmp/peers_in.prom.tmp\nmv /home/ada/custom-metrics/tmp/peers_in.prom.tmp /var/lib/node_exporter/peers_in.prom\n')),(0,o.kt)("p",null,"Make it executable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x $HOME/custom-metrics/peers_in.sh\n")),(0,o.kt)("p",null,"Open node-exporter configuration file and add.."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/conf.d/prometheus-node-exporter\n")),(0,o.kt)("p",null,"Make it look like this."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NODE_EXPORTER_ARGS='--collector.textfile.directory=/var/lib/node_exporter'\n")),(0,o.kt)("p",null,"Create that directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /var/lib/node_exporter\n")),(0,o.kt)("p",null,"Create a cron job as root to run our script every minute."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo EDITOR=nano crontab -e\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"SHELL=/bin/bash\n* * * * * /home/ada/custom-metrics/peers_in.sh\n")),(0,o.kt)("p",null,"Restart prometheus-node-xporter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart prometheus-node-exporter\n")),(0,o.kt)("p",null,"After a minute you should be able to find a metric in Grafana called 'peers_in'."),(0,o.kt)("h2",{id:"system-updates"},"System updates"),(0,o.kt)("p",null,"Track available system upgrades(pacman)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano $HOME/custom-metrics/pacman_upgrades.sh\n")),(0,o.kt)("p",null,"Add following."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'UPDATES="$(/usr/bin/checkupdates | wc -l)"\necho "pacman_upgrades_pending ${UPDATES}" > /home/ada/custom-metrics/tmp/pacman_upgrades_pending.prom.tmp\nmv /home/ada/custom-metrics/tmp/pacman_upgrades_pending.prom.tmp /var/lib/node_exporter/pacman_upgrades_pending.prom\n')),(0,o.kt)("p",null,"Make it executable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x $HOME/custom-metrics/pacman_upgrades.sh\n")),(0,o.kt)("p",null,"Create a cron job as root to run our script once a day at 1 am."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo EDITOR=nano crontab -e\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"0 1 * * * /home/ada/custom-metrics/pacman_upgrades.sh\n")),(0,o.kt)("p",null,"Restart prometheus-node-xporter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart prometheus-node-exporter\n")),(0,o.kt)("p",null,"In Grafana find the 'pacman_upgrades_pending' metric. It will not be available until you fire off the script or cron runs it."),(0,o.kt)("h2",{id:"usefull-links"},"Usefull links"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://nsrc.org/workshops/2021/sanog37/nmm/netmgmt/en/prometheus/ex-custom-metrics.htm"},"custom-metrics")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://vdwaa.nl/arch-prometheus-monitoring.html"},"arch prometheus monitoring")))}d.isMDXComponent=!0}}]);