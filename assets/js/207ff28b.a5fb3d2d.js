"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[8364],{448:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=o(4848),t=o(8453);const r={},a="Part 2: Ergo Full Node Setup",i={id:"ergo-developer-guides/part2-ergo-full-node",title:"Part 2: Ergo Full Node Setup",description:"Time Allotment:",source:"@site/docs/ergo-developer-guides/part2-ergo-full-node.md",sourceDirName:"ergo-developer-guides",slug:"/ergo-developer-guides/part2-ergo-full-node",permalink:"/docs/ergo-developer-guides/part2-ergo-full-node",draft:!1,unlisted:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/ergo-developer-guides/part2-ergo-full-node.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Part 1: Getting your Raspberry Pi (rpi) Setup",permalink:"/docs/ergo-developer-guides/part1-raspi-setup"},next:{title:"Part 3: Run the Node in the Background as a tmux Session",permalink:"/docs/ergo-developer-guides/part3-run-node-in-background-tmux"}},l={},d=[{value:"Setup &amp; Config",id:"setup--config",level:2},{value:"Update the Pi &amp; Install Java",id:"update-the-pi--install-java",level:3},{value:"Increase SWAP size",id:"increase-swap-size",level:3},{value:"Ergo Node Steps",id:"ergo-node-steps",level:2},{value:"API Key",id:"api-key",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"part-2-ergo-full-node-setup",children:"Part 2: Ergo Full Node Setup"}),"\n",(0,s.jsx)(n.p,{children:"Time Allotment:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"15min-2hr to execute (depending on skill level and snags)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"setup--config",children:"Setup & Config"}),"\n",(0,s.jsx)(n.p,{children:"The following steps are a combination of the two great following resources mixed in with notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.ergoplatform.com/node/install/pi/#getting-started",children:"Ergo Platform Docs, Node, Install, Pi"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/Eeysirhc/ergo-rpi/blob/main/docs/ergo-node.md",children:"Eeysirhc's ergo-rpi tutorial"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"update-the-pi--install-java",children:"Update the Pi & Install Java"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Important: SKIP This Step UNLESS you boot from the SD Card"}),": You'll want to start out in the ",(0,s.jsx)(n.code,{children:"/mnt/hd1"}),' as your "home" directory, this is the external ssd hard drive, with the tons of memory for the ergo-node. It is not mentioned in the rest of the tutorial because it assumes directly mounting.']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /mnt/hd1\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"The node is built with Scala but is run by Java, thus we'll need to install package dependencies Java Development Kit."}),"\n",(0,s.jsx)(n.p,{children:"Preparation, update and upgrade the rpi. Check Java SDK."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt upgrade -y\nsudo apt install default-jdk -y\n"})}),"\n",(0,s.jsx)(n.p,{children:"Install the Java JDK"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt install default-jdk\n"})}),"\n",(0,s.jsx)(n.p,{children:"To check java installed properly check the version"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -version\n"})}),"\n",(0,s.jsx)(n.h3,{id:"increase-swap-size",children:"Increase SWAP size"}),"\n",(0,s.jsx)(n.p,{children:"The steps below optimizes your Pi's hardware and extends its operational capabilities for this specific purpose."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dphys-swapfile swapoff\nsudo nano /etc/dphys-swapfile\n"})}),"\n",(0,s.jsx)(n.p,{children:"Edit the CONF_SWAPSIZE default value of 100 to 4096 mega bytes"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"CONF_SWAPSIZE=4096"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Save file with "CTRL + X" then hit "Y" for Yes to save, and "ENTER" to confirm.'}),"\n",(0,s.jsx)(n.p,{children:"Turn swapfile on"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo dphys-swapfile setup\nsudo dphys-swapfile swapon\n"})}),"\n",(0,s.jsx)(n.p,{children:"Reboot to start fresh"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo reboot\n"})}),"\n",(0,s.jsx)(n.h2,{id:"ergo-node-steps",children:"Ergo Node Steps"}),"\n",(0,s.jsx)(n.p,{children:'The following steps will setup the ergo node\'s configuration, download the node software ".jar" file, setup and run the node.'}),"\n",(0,s.jsx)(n.p,{children:"We will then check the node is syncing with the Ergo Node Explorer site in the browser."}),"\n",(0,s.jsx)(n.p,{children:"First, ssh back into the pi"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh pi@headless.local\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then once inside the rpi, change directory to the external hard drive location ",(0,s.jsx)(n.strong,{children:"very important"})," /mnt/hd1 and setup a new ergo folder."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir ergo-node\ncd ergo-node\n"})}),"\n",(0,s.jsxs)(n.p,{children:["From the ",(0,s.jsx)(n.a,{href:"https://github.com/ergoplatform/ergo/releases",children:"Ergo Platform Github Release"}),", check the latest release version."]}),"\n",(0,s.jsxs)(n.p,{children:["Next, copy and paste the following line into a text file. ",(0,s.jsx)(n.strong,{children:"Remove VERSION"})," and insert the latest."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/ergoplatform/ergo/releases/download/v<VERSION>/ergo-<VERSION>.jar\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: Update the version in the above file. For copy and paste ease:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://github.com/ergoplatform/ergo/releases/download/v5.0.14/ergo-5.0.14.jar\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will take a few minutes."}),"\n",(0,s.jsxs)(n.p,{children:["Note: GNU Wget is a free utility for non-interactive download of files from the Web. ",(0,s.jsx)(n.a,{href:"https://www.gnu.org/savannah-checkouts/gnu/wget/manual/wget.html",children:"more"})]}),"\n",(0,s.jsx)(n.p,{children:"Next, setup the ergo node configuration file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo nano ergo.conf\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: sudo is super user do (admin privileges). Nano is command line to touch and edit the ergo.conf file. You will now be inside the ergo.conf file. If the file didn't exist, it was just now created."}),"\n",(0,s.jsxs)(n.p,{children:["Copy and paste the contents of the ",(0,s.jsx)(n.a,{href:"/docs/ergo-developer-guides/example_ergo_config_file",children:"Reference ergo.conf example file"})," into a separate text file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'    ergo {\n        node {\n            mining = false\n            extraIndex = false\n            \n            utxo {\n                # Download and apply UTxO set snapshot and full-blocks after that\n                utxoBootstrap = false\n\n                # How many utxo set snapshots to store, 0 means that they are not stored at all\n                storingUtxoSnapshots = 2\n\n                # How many utxo set snapshots for a height with the same id we need to find in p2p network\n                # in order to start downloading it\n                p2pUtxoSnapshots = 2\n            }\n            # Settings releated to headers-chain bootstrapping via NiPoPows\n            nipopow {\n                # Download PoPoW proof on node utxoBootstrap\n                nipopowBootstrap = false\n\n                #how many different proofs we are downloading from other peers\n                # and compare with each other, before choosing the best one\n                p2pNipopows = 2\n            }\n        }\n    }\n    scorex {\n        restApi {\n            # node which exposes restApi in firewall should define publicly accessible URL of it\n            # you will need to enable port forwarding from logging into your router for 9053\n            # publicUrl = "http://xxx.xxx.xxx.xxx:9053"\n            # apiKeyHash = "CHANGE_ME_HASH"\n        }\n        network {\n            # For below declared address do not include "http://"!\n            # you will need to enable port forwarding from logging into your router for 9030\n            # declaredAddress = "xxx.xxx.xxx.xxx:9030"\n            # nodeName = "my-ergo-node"\n        }\n    }\n'})}),"\n",(0,s.jsx)(n.p,{children:"You'll need to make the following updates:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"extraIndex ?: If true, will basically store extra blockchain data"}),"\n",(0,s.jsxs)(n.li,{children:["Under scorex","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"publicUrl - update"}),"\n",(0,s.jsx)(n.li,{children:"apiKeyHash - update"}),"\n",(0,s.jsx)(n.li,{children:"declared address - update"}),"\n",(0,s.jsx)(n.li,{children:"nodeName - update"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For light weight full node using bootstrapping and NiPoPow, see ",(0,s.jsx)(n.a,{href:"/docs/ergo-developer-guides/example_ergo_config_file_light",children:"example_ergo_config_file_light"})]}),"\n",(0,s.jsx)(n.p,{children:"Give it a go and run it! Ctrl+X to overwrite and Yes enter to save."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar -Xmx2g ergo-<NODE>.jar --mainnet -c ergo.conf\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note: Update the version in the command above. e.g"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar -Xmx2g ergo-5.0.14.jar --mainnet -c ergo.conf\n"})}),"\n",(0,s.jsx)(n.h3,{id:"api-key",children:"API Key"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"http://headless.local:9053/panel",children:"http://headless.local:9053/panel"})}),"\n",(0,s.jsxs)(n.p,{children:["Update hello in the command below with a custom API password. Where instead of ",(0,s.jsx)(n.strong,{children:"hello"})," insert custom password!"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST "http://213.239.193.208:9053/utils/hash/blake2b" \\\n-H "accept: application/json" \\\n-H "Content-Type: application/json" \\\n-d "\\"hello\\""\n'})}),"\n",(0,s.jsx)(n.p,{children:'Type in the password in the browser node panel under "API Key". It should work.'}),"\n",(0,s.jsx)(n.p,{children:"Congrats!! You should see the node syncing now on the Ergo Node Explorer panel."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"ergo-node-start-sync",src:o(7423).A+"",width:"1881",height:"861"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7423:(e,n,o)=>{o.d(n,{A:()=>s});const s=o.p+"assets/images/successful_node_running_start-16f21f0e1247b744f626ae08e316807f.jpeg"},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var s=o(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);