"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[1075],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(f,l(l({ref:n},c),{},{components:t})):a.createElement(f,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2360:function(e,n,t){t.d(n,{Z:function(){return l}});var a=t(7294),r=t(6010),o="tabItem_OmH5";function l(e){var n=e.children,t=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:t},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(7462),r=t(7294),o=t(2389),l=t(7392),s=t(7094),i=t(2466),u=t(6010),c="tabList_uSqn",p="tabItem_LplD";function d(e){var n,t,o,d=e.lazy,m=e.block,f=e.defaultValue,v=e.values,g=e.groupId,b=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=v?v:y.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),k=(0,l.l)(h,(function(e,n){return e.value===n.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var P=null===f?f:null!=(n=null!=f?f:null==(t=y.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=y[0])?void 0:o.props.value;if(null!==P&&!h.some((function(e){return e.value===P})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+P+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),w=N.tabGroupChoices,O=N.setTabGroupChoices,T=(0,r.useState)(P),E=T[0],j=T[1],x=[],I=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var C=w[g];null!=C&&C!==E&&h.some((function(e){return e.value===C}))&&j(C)}var R=function(e){var n=e.currentTarget,t=x.indexOf(n),a=h[t].value;a!==E&&(I(n),j(a),null!=g&&O(g,a))},D=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=x.indexOf(e.currentTarget)+1;t=x[a]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;t=x[r]||x[x.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,u.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":m},b)},h.map((function(e){var n=e.value,t=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:E===n?0:-1,"aria-selected":E===n,key:n,ref:function(e){return x.push(e)},onKeyDown:D,onFocus:R,onClick:R},o,{className:(0,u.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":E===n})}),null!=t?t:n)}))),d?(0,r.cloneElement)(y.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==E})}))))}function m(e){var n=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(n)},e))}},2708:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return m}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),l=(t(9960),t(9877)),s=t(2360),i=["components"],u={},c="Enable P2P Networking",p={unversionedId:"stake-pool-guides/p2p-networking",id:"stake-pool-guides/p2p-networking",title:"Enable P2P Networking",description:"You will have to upgrade the whole pool to P2P at the same time. I could not get tx's into my core node till P2P was enabled on it.",source:"@site/docs/stake-pool-guides/p2p-networking.md",sourceDirName:"stake-pool-guides",slug:"/stake-pool-guides/p2p-networking",permalink:"/docs/stake-pool-guides/p2p-networking",draft:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/stake-pool-guides/p2p-networking.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Wireguard Guide",permalink:"/docs/stake-pool-guides/wireguard-guide"},next:{title:"Other Cardano Guides",permalink:"/docs/cardano-developer-guides/"}},d={},m=[],f={toc:m};function v(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"enable-p2p-networking"},"Enable P2P Networking"),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"You will have to upgrade the whole pool to P2P at the same time. I could not get tx's into my core node till P2P was enabled on it."))),(0,o.kt)("p",null,"Edit your mainnet-config.json or testnet-config.json"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="${NODE_CONFIG}-config.json"',title:'"${NODE_CONFIG}-config.json"'},'"TestEnableDevelopmentNetworkProtocols": true,\n"EnableP2P": true,\n"MaxConcurrencyBulkSync": 2,\n"MaxConcurrencyDeadline": 4,\n"TargetNumberOfRootPeers": 50,\n"TargetNumberOfKnownPeers": 50,\n"TargetNumberOfEstablishedPeers": 25,\n"TargetNumberOfActivePeers": 10,\n')),(0,o.kt)(l.Z,{groupId:"CONFIG_NET",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"Testnet",label:"Testnet P2P Relay",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="testnet-topology.json"',title:'"testnet-topology.json"'},'{\n  "LocalRoots": {\n    "groups": [\n      {\n        "localRoots": {\n          "accessPoints": [\n             { "address": "<Block Producer IP or DNS hostname", "port": 6000, "valency": 1, "name": "My Core Node"}\n          ],\n          "advertise": false\n        }\n      }\n    ]\n  },\n  "PublicRoots": [\n    {\n      "publicRoots" : {\n        "accessPoints": [\n          { "address": "relays-new.cardano-testnet.iohkdev.io", "port": 3001, "valency": 2, "name": "IOG"}\n        ],\n        "advertise": true\n      }\n    }\n  ],\n  "useLedgerAfterSlot": 0\n}\n'))),(0,o.kt)(s.Z,{value:"Mainnet",label:"Mainnet P2P Relay",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="mainnet-topology.json"',title:'"mainnet-topology.json"'},'{\n  "LocalRoots": {\n    "groups": [\n      {\n        "localRoots": {\n          "accessPoints": [\n             { "address": "<Block Producer IP or DNS hostname", "port": 3000, "valency": 1, "name": "My Core Node"}\n          ],\n          "advertise": false\n        }\n      }\n    ]\n  },\n  "PublicRoots": [\n    {\n      "publicRoots" : {\n        "accessPoints": [\n          { "address": "otg-relay-1.adamantium.online", "port": 6001, "valency": 1, "name": "OTG"},\n          { "address": "adarelay01.psilobyte.io", "port": 3001, "valency": 1, "name": "PSB"}\n        ],\n        "advertise": true\n      }\n    }\n  ],\n  "useLedgerAfterSlot": 0\n}\n')))),(0,o.kt)(l.Z,{groupId:"CONFIG_NET",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"Testnet",label:"Testnet P2P Core",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="testnet-topology.json"',title:'"testnet-topology.json"'},'{\n  "LocalRoots": {\n    "groups": [\n      {\n        "localRoots": {\n          "accessPoints": [\n            { "address": "<Relay 1 IP or DNS hostname>", "port": 6001, "valency": 1, "name": "Your Core Example"},\n            { "address": "<Relay 2 IP or DNS hostname>", "port": 6002, "valency": 1, "name": "Your Core Example"}\n          ],\n          "advertise": false\n        },\n       "valency": 2\n      }\n    ]\n  },\n  "PublicRoots": []\n}\n'))),(0,o.kt)(s.Z,{value:"Mainnet",label:"Mainnet P2P Core",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="mainnet-topology.json"',title:'"mainnet-topology.json"'},'{\n  "LocalRoots": {\n    "groups": [\n      {\n        "localRoots": {\n          "accessPoints": [\n            { "address": "<Relay 1 IP or DNS hostname>", "port": 6001, "valency": 1, "name": "Your Core Example"},\n            { "address": "<Relay 2 IP or DNS hostname>", "port": 6002, "valency": 1, "name": "Your Core Example"}\n          ],\n          "advertise": false\n        },\n       "valency": 2\n      }\n    ]\n  },\n  "PublicRoots": []\n}\n')))))}v.isMDXComponent=!0}}]);