"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[9400],{3055:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var t=n(4848),r=n(8453);const s={},a=void 0,i={id:"ergo-developer-guides/example_ergo_config_file_light",title:"example_ergo_config_file_light",description:"",source:"@site/docs/ergo-developer-guides/example_ergo_config_file_light.md",sourceDirName:"ergo-developer-guides",slug:"/ergo-developer-guides/example_ergo_config_file_light",permalink:"/docs/ergo-developer-guides/example_ergo_config_file_light",draft:!1,unlisted:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/ergo-developer-guides/example_ergo_config_file_light.md",tags:[],version:"current",frontMatter:{}},l={},d=[];function p(e){const o={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:'ergo {\n    node {\n        mining = false\n        extraIndex = false\n\n        ## for light weight nipopow node using just block headers for state\n        ## uncomment the below stateType, blocksToKeep (for last 3 days), and nipopowBootstrap\n        stateType = "digest"\n        blocksToKeep = 1440\n\n        utxo {\n            # Download and apply UTxO set snapshot and full-blocks after that\n            utxoBootstrap = true\n\n            # How many utxo set snapshots to store, 0 means that they are not stored at all\n            storingUtxoSnapshots = 2\n\n            # How many utxo set snapshots for a height with the same id we need to find in p2p network\n            # in order to start downloading it\n            p2pUtxoSnapshots = 2\n        }\n        # Settings releated to headers-chain bootstrapping via NiPoPows\n        nipopow {\n            # Download PoPoW proof on node utxoBootstrap\n            nipopowBootstrap = true\n\n            #how many different proofs we are downloading from other peers\n            # and compare with each other, before choosing the best one\n            p2pNipopows = 2\n        }\n    }\n}\nscorex {\n    restApi {\n        # node which exposes restApi in firewall should define publicly accessible URL of it\n        # you will need to enable port forwarding from logging into your router for 9053\n        # publicUrl = "http://xxx.xxx.xxx.xxx:9053"\n        # apiKeyHash = "CHANGE_ME_HASH"\n    }\n    network {\n        # For below declared address do not include "http://"!\n        # you will need to enable port forwarding from logging into your router for 9030\n        # declaredAddress = "xxx.xxx.xxx.xxx:9030"\n        # nodeName = "my-ergo-node"\n    }\n}\n'})})}function c(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>a,x:()=>i});var t=n(6540);const r={},s=t.createContext(r);function a(e){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);