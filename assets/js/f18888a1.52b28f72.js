"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[7642],{8339:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=t(4848),o=t(8453);const i={description:"Quickly bootstrap a synced configured Cardano node in a few hours.",keywords:["guides","cardano node","cardano stake pool","rasbperry pi","armada alliance","ubuntu"]},s="Pi-Node (Image Quick Start)",r={id:"stake-pool-guides/pi-pool-tutorial/pi-node-quick",title:"Pi-Node (Image Quick Start)",description:"Quickly bootstrap a synced configured Cardano node in a few hours.",source:"@site/docs/stake-pool-guides/pi-pool-tutorial/pi-node-quick.md",sourceDirName:"stake-pool-guides/pi-pool-tutorial",slug:"/stake-pool-guides/pi-pool-tutorial/pi-node-quick",permalink:"/docs/stake-pool-guides/pi-pool-tutorial/pi-node-quick",draft:!1,unlisted:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/stake-pool-guides/pi-pool-tutorial/pi-node-quick.md",tags:[],version:"current",frontMatter:{description:"Quickly bootstrap a synced configured Cardano node in a few hours.",keywords:["guides","cardano node","cardano stake pool","rasbperry pi","armada alliance","ubuntu"]},sidebar:"tutorialSidebar",previous:{title:"Pi-Node Full-Guide (Ubuntu Server)",permalink:"/docs/stake-pool-guides/pi-node-full-guide/"},next:{title:"Introduction & Hardware",permalink:"/docs/stake-pool-guides/pi-pool-tutorial/"}},l={},d=[{value:"<strong>1. Download and flash the</strong> <strong>Pi-Node.img.gz</strong><strong>.</strong>",id:"1-download-and-flash-the-pi-nodeimggz",level:3},{value:"2. ssh into the server.",id:"2-ssh-into-the-server",level:3},{value:"Choose testnet or mainnet.",id:"choose-testnet-or-mainnet",level:2},{value:"<strong>Defaults to testnet</strong>.",id:"defaults-to-testnet",level:3},{value:"Retrieve node files",id:"retrieve-node-files",level:3},{value:"3. Enter the pi-pool folder.",id:"3-enter-the-pi-pool-folder",level:3},{value:"4. Download ledger snapshot.",id:"4-download-ledger-snapshot",level:3},{value:"5. Enable &amp; start the cardano-service.",id:"5-enable--start-the-cardano-service",level:3},{value:"6. Enable &amp; start the cardano-monitor.",id:"6-enable--start-the-cardano-monitor",level:3},{value:"7. Confirm they are running.",id:"7-confirm-they-are-running",level:3},{value:"8. gliveview.sh",id:"8-gliveviewsh",level:3},{value:"9. Grafana.",id:"9-grafana",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"pi-node-image-quick-start",children:"Pi-Node (Image Quick Start)"}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.p,{children:"After booting the image you can edit the ~/.adaenv file to switch to mainnet. Image defaults to testnet. Source .bashrc to load changes to .adaenv. You can then choose to start the node and sync the whole chain which will take days or you can download the snapshot for mainnet or testnet which should reduce sync time to a couple hours."}),(0,a.jsx)(n.p,{children:"Check if process is running with htop, use gLiveView.sh or follow the systemd service with"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"journalctl -f --output=cat -u cardano-node\n"})}),(0,a.jsx)(n.p,{children:"It is best to just leave it running. \ud83c\udfc3"})]}),"\n",(0,a.jsxs)(n.h3,{id:"1-download-and-flash-the-pi-nodeimggz",children:[(0,a.jsx)(n.strong,{children:"1. Download and flash the"})," ",(0,a.jsx)(n.a,{href:"https://mainnet.adamantium.online/Pi-Node.img.gz",children:(0,a.jsx)(n.strong,{children:"Pi-Node.img.gz"})}),(0,a.jsx)(n.strong,{children:"."})]}),"\n",(0,a.jsx)(n.h3,{id:"2-ssh-into-the-server",children:"2. ssh into the server."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"ssh ada@<pi-node private IPv4>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Default credentials = ",(0,a.jsxs)(n.strong,{children:["ada",":lovelace"]})]}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["Check which version of cardano-node is on the image. Follow the static build upgrade instructions to upgrade. ",(0,a.jsx)(n.a,{href:"/docs/stake-pool-guides/updating-a-cardano-node/static-build",title:"mention",children:"static-build.md"})]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-node version\n"})}),"\n",(0,a.jsx)(n.h2,{id:"choose-testnet-or-mainnet",children:"Choose testnet or mainnet."}),"\n",(0,a.jsxs)(n.h3,{id:"defaults-to-testnet",children:[(0,a.jsx)(n.strong,{children:"Defaults to testnet"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Switch between testnet & mainnet, for mainnet issue.."}),"\n",(0,a.jsx)(n.p,{children:"Config file path /home/ada/.adaenv edit manually or run"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:'sed -i .adaenv -e "s/NODE_CONFIG=testnet/NODE_CONFIG=mainnet/g"; source .adaenv\n'})}),"\n",(0,a.jsx)(n.h3,{id:"retrieve-node-files",children:"Retrieve node files"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd $NODE_FILES\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-config.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-byron-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-shelley-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-alonzo-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-topology.json\nwget -N https://raw.githubusercontent.com/input-output-hk/cardano-node/master/cardano-submit-api/config/tx-submit-mainnet-config.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:'Run the following to modify ${NODE_CONFIG}-config.json and update TraceBlockFetchDecisions to "true" & listen on all interfaces with Prometheus Node Exporter.'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:'sed -i ${NODE_CONFIG}-config.json \\\n    -e "s/TraceBlockFetchDecisions\\": false/TraceBlockFetchDecisions\\": true/g" \\\n    -e "s/127.0.0.1/0.0.0.0/g"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"3-enter-the-pi-pool-folder",children:"3. Enter the pi-pool folder."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd /home/ada/pi-pool\n"})}),"\n",(0,a.jsx)(n.h3,{id:"4-download-ledger-snapshot",children:"4. Download ledger snapshot."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:'wget -r -np -nH -R "index.html*" -e robots=off https://$NODE_CONFIG.adamantium.online/db/\n'})}),"\n",(0,a.jsx)(n.h3,{id:"5-enable--start-the-cardano-service",children:"5. Enable & start the cardano-service."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-service enable\ncardano-service start\n"})}),"\n",(0,a.jsx)(n.h3,{id:"6-enable--start-the-cardano-monitor",children:"6. Enable & start the cardano-monitor."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-monitor enable\ncardano-monitor start\n"})}),"\n",(0,a.jsx)(n.h3,{id:"7-confirm-they-are-running",children:"7. Confirm they are running."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cardano-service status\ncardano-monitor status\n"})}),"\n",(0,a.jsx)(n.p,{children:"Follow journal output or syslog"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"sudo journalctl -f --output=cat -u cardano-node\nsudo tail -f /var/log/syslog\n"})}),"\n",(0,a.jsx)(n.h3,{id:"8-gliveviewsh",children:"8. gliveview.sh"}),"\n",(0,a.jsx)(n.p,{children:"Allow these files to update if they wish to."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title=">_ Terminal"',children:"cd $NODE_HOME/scripts\n./gLiveView.sh\n"})}),"\n",(0,a.jsx)(n.h3,{id:"9-grafana",children:"9. Grafana."}),"\n",(0,a.jsx)(n.p,{children:"Enter your Node's IPv4 address in your browser."}),"\n",(0,a.jsxs)(n.p,{children:["Default credentials = ",(0,a.jsxs)(n.strong,{children:["admin",":admin"]})]}),"\n",(0,a.jsxs)(n.admonition,{title:"Dashboards and pooldata api info can be found here.",type:"tip",children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/armada-alliance/dashboards",children:"https://github.com/armada-alliance/dashboards"})}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://api.pooldata.live/",children:"https://api.pooldata.live/"})})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var a=t(6540);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);