"use strict";(self.webpackChunkarmada_alliance_docusaurus=self.webpackChunkarmada_alliance_docusaurus||[]).push([[9706],{7083:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var a=s(4848),r=s(8453);const i={},o="cardano-node on Asahi Arch Linux, Apple Silicon",t={id:"cardano-developer-guides/arch-linux-os",title:"cardano-node on Asahi Arch Linux, Apple Silicon",description:"Prerequisites",source:"@site/docs/cardano-developer-guides/arch-linux-os.md",sourceDirName:"cardano-developer-guides",slug:"/cardano-developer-guides/arch-linux-os",permalink:"/docs/cardano-developer-guides/arch-linux-os",draft:!1,unlisted:!1,editUrl:"https://github.com/armada-alliance/docs/edit/master/docs/cardano-developer-guides/arch-linux-os.md",tags:[],version:"current",frontMatter:{}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Bash completion",id:"bash-completion",level:2},{value:"Locales",id:"locales",level:2},{value:"Time",id:"time",level:2},{value:"Chrony",id:"chrony",level:2},{value:"Packages",id:"packages",level:2},{value:"zram swap",id:"zram-swap",level:2},{value:"Prometheus",id:"prometheus",level:2},{value:"Grafana",id:"grafana",level:2},{value:"With Snap",id:"with-snap",level:3},{value:"Grafan-bin AUR",id:"grafan-bin-aur",level:3},{value:"Wireguard",id:"wireguard",level:2},{value:"Static ip",id:"static-ip",level:2},{value:"Hostname",id:"hostname",level:2},{value:"Server setup",id:"server-setup",level:2},{value:"sysctl",id:"sysctl",level:2},{value:"Disable the root user",id:"disable-the-root-user",level:3},{value:"Secure shared memory",id:"secure-shared-memory",level:3},{value:"Increase open file limit for $USER",id:"increase-open-file-limit-for-user",level:3},{value:"Choose testnet or mainnet.",id:"choose-testnet-or-mainnet",level:2},{value:"Create bash variables &amp; add ~/.local/bin to our $PATH \ud83c\udfc3",id:"create-bash-variables--add-localbin-to-our-path-",level:3},{value:"Retrieve node files",id:"retrieve-node-files",level:3},{value:"Build Libsodium",id:"build-libsodium",level:2},{value:"Build secp256k1",id:"build-secp256k1",level:2},{value:"LLVM 9.0.1",id:"llvm-901",level:2},{value:"ncurses5 compat libs",id:"ncurses5-compat-libs",level:2},{value:"GHCUP, GHC &amp; Cabal",id:"ghcup-ghc--cabal",level:2},{value:"Obtain cardano-node",id:"obtain-cardano-node",level:3},{value:"Systemd unit startup scripts",id:"systemd-unit-startup-scripts",level:3},{value:"gLiveView.sh",id:"gliveviewsh",level:2},{value:"Install Cronie",id:"install-cronie",level:2},{value:"topologyUpdater.sh (not needed on block producer)",id:"topologyupdatersh-not-needed-on-block-producer",level:2},{value:"Add save and exit",id:"add-save-and-exit",level:3},{value:"Display inbound connections in Grafana",id:"display-inbound-connections-in-grafana",level:2},{value:"System updates",id:"system-updates",level:2},{value:"Usefull links",id:"usefull-links",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"cardano-node-on-asahi-arch-linux-apple-silicon",children:"cardano-node on Asahi Arch Linux, Apple Silicon"}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"Asahi Arch, minimal or desktop installed."}),"\n",(0,a.jsx)(n.p,{children:"log in to both alarm and root. Change the passwords."}),"\n",(0,a.jsx)(n.p,{children:"Update the system as root."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pacman -Syu\n"})}),"\n",(0,a.jsx)(n.p,{children:"Start and enable sshd. pw auth is disabled for root, login with alarm user."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"systemctl start sshd.service\nsystemctl enable sshd.service\n"})}),"\n",(0,a.jsx)(n.p,{children:"Install pacman-contrib which includes sudo and some other useful packages and open the sudoers file with visudo and enable the wheel group."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pacman -S pacman-contrib sudo git curl wget htop rsync numactl\nsudo EDITOR=nano visudo\n"})}),"\n",(0,a.jsx)(n.p,{children:"Like below."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"## Uncomment to allow members of group wheel to execute any command\n%wheel ALL=(ALL:ALL) ALL\n\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add a new user to the wheel group, give it a password."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"useradd -m -G wheel -s /bin/bash ada\npasswd ada\n"})}),"\n",(0,a.jsx)(n.p,{children:"Log out and back in as your new user with SSH. Test sudo by upgrading the system again."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pacman -Syu\n"})}),"\n",(0,a.jsxs)(n.p,{children:['{% hint style="info" %}\nThe Arch Bash shell is boring. Optionally install ',(0,a.jsx)(n.a,{href:"https://bash-it.readthedocs.io/en/latest/installation/",children:"Bash-it"})," for a fancy shell.\n{% endhint %}"]}),"\n",(0,a.jsx)(n.p,{children:'{% hint style="warning" %}\nRemember to copy your ssh key and disable password aurthentication in sshd_config.\n{% endhint %}'}),"\n",(0,a.jsx)(n.h2,{id:"bash-completion",children:"Bash completion"}),"\n",(0,a.jsx)(n.p,{children:"Add 'complete -cf sudo' to the bottom of .bash_profile and source."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"echo complete -cf sudo >> ${HOME}/.bash_profile; . $HOME/.bash_profile\n"})}),"\n",(0,a.jsx)(n.h2,{id:"locales",children:"Locales"}),"\n",(0,a.jsxs)(n.p,{children:["Generate the ",(0,a.jsx)(n.a,{href:"https://wiki.archlinux.org/title/locale",children:"locales"})," by uncommenting (en_US.UTF-8 UTF-8 for example) and generating."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/locale.gen\nsudo locale-gen\nsudo localectl set-locale LANG=en_US.UTF-8\n"})}),"\n",(0,a.jsx)(n.h2,{id:"time",children:"Time"}),"\n",(0,a.jsx)(n.p,{children:"Set your timezone"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo timedatectl set-timezone America/New_York\n"})}),"\n",(0,a.jsx)(n.p,{children:"No more daylight savings, possible to set RTC to local? testing, might not want to do this."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo timedatectl set-local-rtc 1\n# set to 0 for UTC\n"})}),"\n",(0,a.jsx)(n.h2,{id:"chrony",children:"Chrony"}),"\n",(0,a.jsx)(n.p,{children:"While we are messing with time.. Install and open chrony.conf and replace contents with below (use ctrl+k to cut whole lines)."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pacman -S chrony\nsudo nano /etc/chrony.conf\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pool time.google.com       iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\npool time.euro.apple.com   iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\npool time.apple.com        iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\npool ntp.ubuntu.com        iburst minpoll 2 maxpoll 2 maxsources 3 maxdelay 0.3\n\n# This directive specify the location of the file containing ID/key pairs for\n# NTP authentication.\nkeyfile /etc/chrony/chrony.keys\n\n# This directive specify the file into which chronyd will store the rate\n# information.\ndriftfile /var/lib/chrony/chrony.drift\n\n# Uncomment the following line to turn logging on.\n#log tracking measurements statistics\n\n# Log files location.\nlogdir /var/log/chrony\n\n# Stop bad estimates upsetting machine clock.\nmaxupdateskew 5.0\n\n# This directive enables kernel synchronisation (every 11 minutes) of the\n# real-time clock. Note that it can\u2019t be used along with the 'rtcfile' directive.\nrtcsync\n\n# Step the system clock instead of slewing it if the adjustment is larger than\n# one second, but only in the first three clock updates.\nmakestep 0.1 -1\n\n# Get TAI-UTC offset and leap seconds from the system tz database\nleapsectz right/UTC\n\n# Serve time even if not synchronized to a time source.\nlocal stratum 10\n"})}),"\n",(0,a.jsx)(n.p,{children:'{% hint style="warning" %}\nNote: systemd-timesyncd.service is in conflict with chronyd, so you need to disable it first if you want to enable chronyd properly.\n{% endhint %}'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop systemd-timesyncd.service\nsudo systemctl disable systemd-timesyncd.service\n# enable and start chrony\nsudo systemctl start chronyd.service\nsudo systemctl enable chronyd.service\n"})}),"\n",(0,a.jsx)(n.h2,{id:"packages",children:"Packages"}),"\n",(0,a.jsx)(n.p,{children:"Add the following packages to build and run cardano-node."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pacman -S --needed base-devel\nsudo pacman -S openssl libtool unzip jq bc xz numactl\n"})}),"\n",(0,a.jsx)(n.h2,{id:"zram-swap",children:"zram swap"}),"\n",(0,a.jsx)(n.p,{children:"Install and create a conf file with following."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pacman -S zram-generator\nsudo nano /usr/lib/systemd/zram-generator.conf\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You may want to read up on zram. I always set 1.5 times the amount of system ram. ",(0,a.jsx)(n.a,{href:"https://github.com/systemd/zram-generator/blob/main/man/zram-generator.conf.md",children:"github"})," | ",(0,a.jsx)(n.a,{href:"https://haydenjames.io/raspberry-pi-performance-add-zram-kernel-parameters/",children:"Hayden James"})," |\n",(0,a.jsx)(n.a,{href:"https://lists.ubuntu.com/archives/lubuntu-users/2013-October/005831.html",children:"lubuntu mailing list"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"[zram0]\nzram-size = min(24 * 1024)\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will give you 24gb of zram swap and will absorb the brunt of running the built in leaderlogs. Reboot and check htop to confirm."}),"\n",(0,a.jsx)(n.h2,{id:"prometheus",children:"Prometheus"}),"\n",(0,a.jsx)(n.p,{children:"Install Prometheus and Prometheus-node-exporter"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pacman -S prometheus prometheus-node-exporter\n"})}),"\n",(0,a.jsx)(n.h2,{id:"grafana",children:"Grafana"}),"\n",(0,a.jsx)(n.p,{children:"Two ways to install Grafana. From AUR or with snap. Pros and cons. Cannot install additional plugins with AUR version (looking into it). Snap is controversial security wise. I need additional plugins so built snap and installed grafana with it."}),"\n",(0,a.jsx)(n.h3,{id:"with-snap",children:"With Snap"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir ~/git\ncd ~/git\ngit clone https://aur.archlinux.org/snapd.git\ncd snapd/\nmakepkg -si\nreboot\nsudo snap install grafana --channel=rock/edge\n"})}),"\n",(0,a.jsx)(n.h3,{id:"grafan-bin-aur",children:"Grafan-bin AUR"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir ~/git\ncd ~/git\n\ngit clone https://aur.archlinux.org/grafana-bin.git\ncd grafana-bin\nmakepkg -si\nsudo systemctl start grafana.service\nsudo systemctl enable grafana.service\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"wireguard",children:"Wireguard"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo pacman -S wireguard-tools\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"static-ip",children:"Static ip"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://wiki.archlinux.org/title/Systemd-networkd#Wired_adapter_using_a_static_IP",children:"systemd"})}),"\n",(0,a.jsx)(n.p,{children:"Create a network service file, make sure edit it to your needs."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/network/20-wired.network\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"[Match]\nName=enp3s0\n\n[Network]\nAddress=192.168.1.151/24\nGateway=192.168.1.1\nDNS=192.168.1.1\n"})}),"\n",(0,a.jsx)(n.p,{children:"Make sure no other network service is running like netctl, then enable and start the service. If there is a network service running stop and disable it."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl --type=service\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable systemd-networkd.service\nsudo systemctl start systemd-networkd.service\n"})}),"\n",(0,a.jsx)(n.p,{children:"Disable/stop dhcp."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"\nsudo systemctl stop dhcpcd\nsudo systemctl disable dhcpcd\nsudo reboot\n"})}),"\n",(0,a.jsx)(n.h2,{id:"hostname",children:"Hostname"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://wiki.archlinux.org/title/Network_configuration#Set_the_hostname",children:"Set the Hostname"})}),"\n",(0,a.jsx)(n.p,{children:"Edit /etc/hostname"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/hostname\n"})}),"\n",(0,a.jsx)(n.p,{children:"and /etc/hosts"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/hosts\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"127.0.0.1        localhost\n::1              localhost\n127.0.1.1        myhostname\n"})}),"\n",(0,a.jsx)(n.h2,{id:"server-setup",children:"Server setup"}),"\n",(0,a.jsx)(n.p,{children:"Tweak/Harden system to our needs."}),"\n",(0,a.jsx)(n.h2,{id:"sysctl",children:"sysctl"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://wiki.archlinux.org/title/sysctl",children:"sysctl"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/sysctl.d/98-cardano-node.conf\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add the following."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"## Asahi Node ##\n\n# swap more to zram\nvm.vfs_cache_pressure = 500\nvm.swappiness = 100\nvm.dirty_background_ratio = 1\nvm.dirty_ratio = 50\n\nfs.file-max = 10000000\nfs.nr_open = 10000000\n\n# enable forwarding if using wireguard\nnet.ipv4.ip_forward = 0\n\n# ignore ICMP redirects\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\n\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\n\n# disable IPv6\n#net.ipv6.conf.all.disable_ipv6 = 1\n#net.ipv6.conf.default.disable_ipv6 = 1\n\n# block SYN attacks\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_max_syn_backlog = 2048\nnet.ipv4.tcp_synack_retries = 3\n#net.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_recv=45\n\n# in progress tasks\nnet.ipv4.tcp_keepalive_time = 240\nnet.ipv4.tcp_keepalive_intvl = 4\nnet.ipv4.tcp_keepalive_probes = 5\n\n# reboot if we run out of memory\nvm.panic_on_oom = 1\nkernel.panic = 10\n"})}),"\n",(0,a.jsx)(n.h3,{id:"disable-the-root-user",children:"Disable the root user"}),"\n",(0,a.jsx)(n.p,{children:"Use sudo to become root.."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"sudo passwd -l root\n"})}),"\n",(0,a.jsx)(n.h3,{id:"secure-shared-memory",children:"Secure shared memory"}),"\n",(0,a.jsx)(n.p,{children:"Mount shared memory as read only. Open /etc/fstab."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"sudo nano /etc/fstab\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add this line at the bottom, save & exit."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"tmpfs    /run/shm    tmpfs    ro,noexec,nosuid    0 0\n"})}),"\n",(0,a.jsx)(n.h3,{id:"increase-open-file-limit-for-user",children:"Increase open file limit for $USER"}),"\n",(0,a.jsx)(n.p,{children:"Add a couple lines to the bottom of /etc/security/limits.conf"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo bash -c \"echo -e '${USER} soft nofile 800000\\n${USER} hard nofile 1048576\\n' >> /etc/security/limits.conf\"\n"})}),"\n",(0,a.jsx)(n.p,{children:"Confirm it was added to the bottom."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cat /etc/security/limits.conf\n"})}),"\n",(0,a.jsx)(n.h2,{id:"choose-testnet-or-mainnet",children:"Choose testnet or mainnet."}),"\n",(0,a.jsxs)(n.p,{children:['{% hint style="danger" %}\nThere is a 500 \u20b3 Registration deposit and another 5 \u20b3 in registration costs to start a pool on mainnet. First time users are strongly reccomended to use testnet. You can get tada (test ada) from the testnet faucet. ',(0,a.jsx)(n.a,{href:"https://testnets.cardano.org/en/testnets/cardano/tools/faucet/",children:"tada faucet link"}),"\n{% endhint %}"]}),"\n",(0,a.jsx)(n.p,{children:"Create the directories for our project."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir -p ${HOME}/.local/bin\nmkdir -p ${HOME}/pi-pool/files\nmkdir -p ${HOME}/pi-pool/scripts\nmkdir -p ${HOME}/pi-pool/logs\nmkdir ${HOME}/git\nmkdir ${HOME}/tmp\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create an .adaenv file, choose which network you want to be on and source the file. This file will hold the variables/settings for operating a Pi-Node. /home/ada/.adaenv"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"echo -e NODE_CONFIG=testnet >> ${HOME}/.adaenv; source ${HOME}/.adaenv\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-bash-variables--add-localbin-to-our-path-",children:"Create bash variables & add ~/.local/bin to our $PATH \ud83c\udfc3"}),"\n",(0,a.jsxs)(n.p,{children:['{% hint style="info" %}\n',(0,a.jsx)(n.a,{href:"https://askubuntu.com/questions/247738/why-is-etc-profile-not-invoked-for-non-login-shells/247769#247769",children:"Environment Variables in Linux/Unix"}),".\n{% endhint %}"]}),"\n",(0,a.jsx)(n.p,{children:'{% hint style="warning" %}\nYou must reload environment files after updating them. Same goes for cardano-node, changes to the topology or config files require a cardano-service restart.\n{% endhint %}'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"echo . ~/.adaenv >> ${HOME}/.bashrc\ncd .local/bin; echo \"export PATH=\\\"$PWD:\\$PATH\\\"\" >> $HOME/.adaenv\necho export NODE_HOME=${HOME}/pi-pool >> ${HOME}/.adaenv\necho export NODE_PORT=3003 >> ${HOME}/.adaenv\necho export NODE_FILES=${HOME}/pi-pool/files >> ${HOME}/.adaenv\necho export TOPOLOGY='${NODE_FILES}'/'${NODE_CONFIG}'-topology.json >> ${HOME}/.adaenv\necho export DB_PATH='${NODE_HOME}'/db >> ${HOME}/.adaenv\necho export CONFIG='${NODE_FILES}'/'${NODE_CONFIG}'-config.json >> ${HOME}/.adaenv\necho export NODE_BUILD_NUM=$(curl https://hydra.iohk.io/job/Cardano/iohk-nix/cardano-deployment/latest-finished/download/1/index.html | grep -e \"build\" | sed 's/.*build\\/\\([0-9]*\\)\\/download.*/\\1/g') >> ${HOME}/.adaenv\necho export CARDANO_NODE_SOCKET_PATH=\"${HOME}/pi-pool/db/socket\" >> ${HOME}/.adaenv\nsource ${HOME}/.bashrc; source ${HOME}/.adaenv\n"})}),"\n",(0,a.jsx)(n.h3,{id:"retrieve-node-files",children:"Retrieve node files"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd $NODE_FILES\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-config.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-byron-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-shelley-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-alonzo-genesis.json\nwget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-topology.json\nwget -N https://raw.githubusercontent.com/input-output-hk/cardano-node/master/cardano-submit-api/config/tx-submit-mainnet-config.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:'Run the following to modify ${NODE_CONFIG}-config.json and update TraceBlockFetchDecisions to "true" & listen on all interfaces with Prometheus Node Exporter.'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sed -i ${NODE_CONFIG}-config.json \\\n    -e "s/TraceBlockFetchDecisions\\": false/TraceBlockFetchDecisions\\": true/g" \\\n    -e "s/127.0.0.1/0.0.0.0/g"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Save & exit."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"source ${HOME}/.adaenv\n"})}),"\n",(0,a.jsx)(n.h2,{id:"build-libsodium",children:"Build Libsodium"}),"\n",(0,a.jsx)(n.p,{children:"This is IOHK's fork of Libsodium. It is needed for the dynamic build binary of cardano-node."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd; cd git/\ngit clone https://github.com/input-output-hk/libsodium\ncd libsodium\ngit checkout 66f017f1\n./autogen.sh\n./configure\nmake\nsudo make install\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add library path to ldconfig."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sudo touch /etc/ld.so.conf.d/local.conf \necho "/usr/local/lib" | sudo tee -a /etc/ld.so.conf.d/local.conf \n'})}),"\n",(0,a.jsx)(n.p,{children:"Echo library paths into .bashrc file and source it."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'echo "export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"" >> ~/.bashrc\necho "export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"" >> ~/.bashrc\n. ~/.bashrc\n'})}),"\n",(0,a.jsx)(n.p,{children:"Update link cache for shared libraries and confirm."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo ldconfig; ldconfig -p | grep libsodium\n"})}),"\n",(0,a.jsx)(n.h2,{id:"build-secp256k1",children:"Build secp256k1"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"git clone https://github.com/bitcoin-core/secp256k1.git\ncd secp256k1\ngit reset --hard $SECP256K1_REF\n./autogen.sh\n./configure  --enable-module-schnorrsig --enable-experimental\nmake\nsudo make install\n"})}),"\n",(0,a.jsx)(n.p,{children:"For those who run cardano-node as a systemd service, run the following:"}),"\n",(0,a.jsx)(n.p,{children:"Update link cache for shared libraries and confirm."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo ldconfig; ldconfig -p | grep secp256k1\n"})}),"\n",(0,a.jsx)(n.h2,{id:"llvm-901",children:"LLVM 9.0.1"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd ~/git\nwget https://github.com/llvm/llvm-project/releases/download/llvmorg-9.0.1/clang+llvm-9.0.1-aarch64-linux-gnu.tar.xz\ntar -xf clang+llvm-9.0.1-aarch64-linux-gnu.tar.xz\nexport PATH=~/git/clang+llvm-9.0.1-aarch64-linux-gnu/bin/:$PATH\n"})}),"\n",(0,a.jsx)(n.h2,{id:"ncurses5-compat-libs",children:"ncurses5 compat libs"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd ~/git\ngit clone https://aur.archlinux.org/ncurses5-compat-libs.git\ncd ncurses5-compat-libs/\ngpg --recv-key CC2AF4472167BE03\n## If this fails it is probly due to your DNS service(Google). \n## Use https://www.quad9.net/\n"})}),"\n",(0,a.jsx)(n.p,{children:"Change target architecture to aarch64 in the build file."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano PKGBUILD\narch=(aarch64)\n"})}),"\n",(0,a.jsx)(n.p,{children:"and build it."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"makepkg -si\n"})}),"\n",(0,a.jsx)(n.p,{children:"Confirm."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"clang --version\n"})}),"\n",(0,a.jsx)(n.h2,{id:"ghcup-ghc--cabal",children:"GHCUP, GHC & Cabal"}),"\n",(0,a.jsx)(n.p,{children:"Install ghcup use defaults when asked."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:". ~/.bashrc\nghcup upgrade\nghcup install cabal 3.4.0.0\nghcup set cabal 3.4.0.0\n\nghcup install ghc 8.10.4\nghcup set ghc 8.10.4\n"})}),"\n",(0,a.jsx)(n.h3,{id:"obtain-cardano-node",children:"Obtain cardano-node"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd $HOME/git\ngit clone https://github.com/input-output-hk/cardano-node.git\ncd cardano-node\ngit fetch --all --recurse-submodules --tags\ngit checkout $(curl -s https://api.github.com/repos/input-output-hk/cardano-node/releases/latest | jq -r .tag_name)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Configure with 8.10.4 set libsodium"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cabal configure -O0 -w ghc-8.10.4\n\necho -e "package cardano-crypto-praos\\n flags: -external-libsodium-vrf" > cabal.project.local\nsed -i $HOME/.cabal/config -e "s/overwrite-policy:/overwrite-policy: always/g"\nrm -rf dist-newstyle/build/aarch64-linux/ghc-8.10.4\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"Build them."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cabal build cardano-cli cardano-node cardano-submit-api\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add them to your PATH."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cp $(find $HOME/git/cardano-node/dist-newstyle/build -type f -name "cardano-cli") $HOME/.local/bin/\ncp $(find $HOME/git/cardano-node/dist-newstyle/build -type f -name "cardano-node") $HOME/.local/bin/\ncp $(find $HOME/git/cardano-node/dist-newstyle/build -type f -name "cardano-submit-api") $HOME/.local/bin/\n'})}),"\n",(0,a.jsx)(n.p,{children:"Check"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cardano-node version\ncardano-cli version\n"})}),"\n",(0,a.jsx)(n.h3,{id:"systemd-unit-startup-scripts",children:"Systemd unit startup scripts"}),"\n",(0,a.jsx)(n.p,{children:"Create the systemd unit file and startup script so systemd can manage cardano-node."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano ${HOME}/.local/bin/cardano-service\n"})}),"\n",(0,a.jsx)(n.p,{children:"Paste the following, save & exit."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n. /home/ada/.adaenv\n\n## +RTS -N6 -RTS = Multicore(4)\ncardano-node run +RTS -N6 -RTS \\\n  --topology ${TOPOLOGY} \\\n  --database-path ${DB_PATH} \\\n  --socket-path ${CARDANO_NODE_SOCKET_PATH} \\\n  --port ${NODE_PORT} \\\n  --config ${CONFIG}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Allow execution of our new cardano-node service file."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod +x ${HOME}/.local/bin/cardano-service\n"})}),"\n",(0,a.jsx)(n.p,{children:"Open /etc/systemd/system/cardano-node.service."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/cardano-node.service\n"})}),"\n",(0,a.jsx)(n.p,{children:"Paste the following, You will need to edit the username here if you chose to not use ada. Save & exit."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# The Cardano Node Service (part of systemd)\n# file: /etc/systemd/system/cardano-node.service\n\n[Unit]\nDescription     = Cardano node service\nWants           = network-online.target\nAfter           = network-online.target\n\n[Service]\nUser            = ada\nType            = simple\nWorkingDirectory= /home/ada/pi-pool\nExecStart       = /bin/bash -c "PATH=/home/ada/.local/bin:$PATH exec /home/ada/.local/bin/cardano-service"\nKillSignal=SIGINT\nRestartKillSignal=SIGINT\nTimeoutStopSec=10\nLimitNOFILE=32768\nRestart=always\nRestartSec=10\nEnvironmentFile=-/home/ada/.adaenv\n\n[Install]\nWantedBy= multi-user.target\n'})}),"\n",(0,a.jsx)(n.p,{children:"Create the systemd unit file and startup script so systemd can manage cardano-submit-api."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano ${HOME}/.local/bin/cardano-submit-service\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n. /home/ada/.adaenv\n\ncardano-submit-api \\\n  --socket-path ${CARDANO_NODE_SOCKET_PATH} \\\n  --port 8090 \\\n  --config /home/ada/pi-pool/files/tx-submit-mainnet-config.yaml \\\n  --listen-address 0.0.0.0 \\\n  --mainnet\n"})}),"\n",(0,a.jsx)(n.p,{children:"Allow execution of our new cardano-submit-api service script."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod +x ${HOME}/.local/bin/cardano-submit-service\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create /etc/systemd/system/cardano-submit.service."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/cardano-submit.service\n"})}),"\n",(0,a.jsx)(n.p,{children:"Paste the following, You will need to edit the username here if you chose to not use ada. save & exit."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# The Cardano Submit Service (part of systemd)\n# file: /etc/systemd/system/cardano-submit.service\n\n[Unit]\nDescription     = Cardano submit service\nWants           = network-online.target\nAfter           = network-online.target\n\n[Service]\nUser            = ada\nType            = simple\nWorkingDirectory= /home/ada/pi-pool\nExecStart       = /bin/bash -c "PATH=/home/ada/.local/bin:$PATH exec /home/ada/.local/bin/cardano-submit-service"\nKillSignal=SIGINT\nRestartKillSignal=SIGINT\nTimeoutStopSec=10\nLimitNOFILE=32768\nRestart=always\nRestartSec=10\nEnvironmentFile=-/home/ada/.adaenv\n\n[Install]\nWantedBy= multi-user.target\n'})}),"\n",(0,a.jsx)(n.p,{children:"Reload systemd so it picks up our new service files."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,a.jsx)(n.p,{children:"Let's add a couple functions to the bottom of our .adaenv file to make life a little easier."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano ${HOME}/.adaenv\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cardano-service() {\n    #do things with parameters like $1 such as\n    sudo systemctl "$1" cardano-node.service\n}\n\ncardano-submit() {\n    #do things with parameters like $1 such as\n    sudo systemctl "$1" cardano-submit.service\n}\n\ncardano-monitor() {\n    #do things with parameters like $1 such as\n    sudo systemctl "$1" prometheus.service\n    sudo systemctl "$1" prometheus-node-exporter.service\n    sudo systemctl "$1" grafana-server\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"What we just did there was add a couple functions to control our cardano-service and cardano-submit without having to type out"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"sudo systemctl enable cardano-node.service"}),"\n",(0,a.jsx)(n.p,{children:"sudo systemctl start cardano-node.service"}),"\n",(0,a.jsx)(n.p,{children:"sudo systemctl stop cardano-node.service"}),"\n",(0,a.jsx)(n.p,{children:"sudo systemctl status cardano-node.service"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Now we just have to:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"cardano-service enable (enables cardano-node.service auto start at boot)"}),"\n",(0,a.jsx)(n.li,{children:"cardano-service start (starts cardano-node.service)"}),"\n",(0,a.jsx)(n.li,{children:"cardano-service stop (stops cardano-node.service)"}),"\n",(0,a.jsx)(n.li,{children:"cardano-service status (shows the status of cardano-node.service)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Or"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"cardano-submit enable (enables cardano-submit.service auto start at boot)"}),"\n",(0,a.jsx)(n.li,{children:"cardano-submit start (starts cardano-submit.service)"}),"\n",(0,a.jsx)(n.li,{children:"cardano-submit stop (stops cardano-submit.service)"}),"\n",(0,a.jsx)(n.li,{children:"cardano-submit status (shows the status of cardano-submit.service)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The submit service listens on port 8090. You can connect your Nami wallet like below to submit tx's yourself in Nami's settings."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"http://<node lan ip>:8090/api/submit/tx\n"})}),"\n",(0,a.jsx)(n.h2,{id:"gliveviewsh",children:"gLiveView.sh"}),"\n",(0,a.jsx)(n.p,{children:"Guild operators scripts has a couple useful tools for operating a pool. We do not want the project as a whole, though there are a couple scripts we are going to use."}),"\n",(0,a.jsxs)(n.p,{children:['{% embed url="',(0,a.jsx)(n.a,{href:"https://github.com/cardano-community/guild-operators/tree/master/scripts/cnode-helper-scripts",children:"https://github.com/cardano-community/guild-operators/tree/master/scripts/cnode-helper-scripts"}),'" %}']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd $NODE_HOME/scripts\nwget https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/env\nwget https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/gLiveView.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:'{% hint style="info" %}\nYou can change the port cardano-node runs on in the .adaenv file in your home directory. Open the file edit the port number. Load the change into your shell & restart the cardano-node service.'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano /home/ada/.adaenv\nsource /home/ada/.adaenv\ncardano-service restart\n"})}),"\n",(0,a.jsx)(n.p,{children:"{% endhint %}"}),"\n",(0,a.jsx)(n.p,{children:"Add a line sourcing our .adaenv file to the top of the env file and adjust some paths."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'sed -i env \\\n    -e "/#CNODEBIN/i. ${HOME}/.adaenv" \\\n    -e "s/\\#CNODE_HOME=\\"\\/opt\\/cardano\\/cnode\\"/CNODE_HOME=\\"\\${HOME}\\/pi-pool\\"/g" \\\n    -e "s/\\#CNODE_PORT=6000"/CNODE_PORT=\\"\'${NODE_PORT}\'\\""/g" \\\n    -e "s/\\#CONFIG=\\"\\${CNODE_HOME}\\/files\\/config.json\\"/CONFIG=\\"\\${NODE_FILES}\\/"\'${NODE_CONFIG}\'"-config.json\\"/g" \\\n    -e "s/\\#TOPOLOGY=\\"\\${CNODE_HOME}\\/files\\/topology.json\\"/TOPOLOGY=\\"\\${NODE_FILES}\\/"\'${NODE_CONFIG}\'"-topology.json\\"/g" \\\n    -e "s/\\#LOG_DIR=\\"\\${CNODE_HOME}\\/logs\\"/LOG_DIR=\\"\\${CNODE_HOME}\\/logs\\"/g"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Allow execution of gLiveView.sh."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod +x gLiveView.sh\n"})}),"\n",(0,a.jsx)(n.h2,{id:"install-cronie",children:"Install Cronie"}),"\n",(0,a.jsx)(n.p,{children:"Arch does not use cron. You can set up a systemd timer or install some other cron like scheduler."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"sudo pacman -S cronie\n"})}),"\n",(0,a.jsx)(n.p,{children:"Enable & start."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable cronie.service\nsudo systemctl start cronie.service\n"})}),"\n",(0,a.jsx)(n.h2,{id:"topologyupdatersh-not-needed-on-block-producer",children:"topologyUpdater.sh (not needed on block producer)"}),"\n",(0,a.jsx)(n.p,{children:"Until peer to peer is enabled on the network operators need a way to get a list of relays/peers to connect to. The topology updater service runs in the background with cron. Every hour the script will run and tell the service you are a relay and want to be a part of the network. It will add your relay to it's directory after four hours you should see in connections in gLiveView."}),"\n",(0,a.jsx)(n.p,{children:'{% hint style="info" %}\nThe list generated will show you the distance & a clue as to where the relay is located.\n{% endhint %}'}),"\n",(0,a.jsx)(n.p,{children:"Download the topologyUpdater script and have a look at it. Here is where you will enter your block producer or any other custom peers you would like to always be connected to."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"wget https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/topologyUpdater.sh\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano topologyUpdater.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Save, exit and make it executable."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod +x topologyUpdater.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:'{% hint style="warning" %}\nYou will not be able to successfully execute ./topologyUpdater.sh until you are fully synced up to the tip of the chain.\n{% endhint %}'}),"\n",(0,a.jsx)(n.p,{children:"Create a cron job that will run once an hour."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"EDITOR=nano crontab -e\n"})}),"\n",(0,a.jsx)(n.h3,{id:"add-save-and-exit",children:"Add save and exit"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"SHELL=/bin/bash\n33 * * * * . $HOME/.adaenv; $HOME/pi-pool/scripts/topologyUpdater.sh\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano $NODE_FILES/${NODE_CONFIG}-topology.json\n"})}),"\n",(0,a.jsx)(n.p,{children:'{% hint style="info" %}\nYou can use gLiveView.sh to view ping times in relation to the peers in your {NODE_CONFIG}-topology file. Use Ping to resolve hostnames to IP\'s.\n{% endhint %}'}),"\n",(0,a.jsx)(n.p,{children:"Changes to this file will take affect upon restarting the cardano-service."}),"\n",(0,a.jsx)(n.h2,{id:"display-inbound-connections-in-grafana",children:"Display inbound connections in Grafana"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir -p $HOME/custom-metrics/tmp\nnano $HOME/custom-metrics/peers_in.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add following, update port # to match cardano-node port."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'INCOMING_PEERS="$(ss -tnp state established | grep "cardano-node" | awk -v port=":3003" \'$3 ~ port {print}\' | wc -l)"\necho "peers_in ${INCOMING_PEERS}" > /home/ada/custom-metrics/tmp/peers_in.prom.tmp\nmv /home/ada/custom-metrics/tmp/peers_in.prom.tmp /var/lib/node_exporter/peers_in.prom\n'})}),"\n",(0,a.jsx)(n.p,{children:"Make it executable."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod +x $HOME/custom-metrics/peers_in.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Open node-exporter configuration file and add.."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/conf.d/prometheus-node-exporter\n"})}),"\n",(0,a.jsx)(n.p,{children:"Make it look like this."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"NODE_EXPORTER_ARGS='--collector.textfile.directory=/var/lib/node_exporter'\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create that directory."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo mkdir /var/lib/node_exporter\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create a cron job as root to run our script every minute."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo EDITOR=nano crontab -e\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"SHELL=/bin/bash\n* * * * * /home/ada/custom-metrics/peers_in.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Restart prometheus-node-xporter."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart prometheus-node-exporter\n"})}),"\n",(0,a.jsx)(n.p,{children:"After a minute you should be able to find a metric in Grafana called 'peers_in'."}),"\n",(0,a.jsx)(n.h2,{id:"system-updates",children:"System updates"}),"\n",(0,a.jsx)(n.p,{children:"Track available system upgrades(pacman)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano $HOME/custom-metrics/pacman_upgrades.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add following."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'UPDATES="$(/usr/bin/checkupdates | wc -l)"\necho "pacman_upgrades_pending ${UPDATES}" > /home/ada/custom-metrics/tmp/pacman_upgrades_pending.prom.tmp\nmv /home/ada/custom-metrics/tmp/pacman_upgrades_pending.prom.tmp /var/lib/node_exporter/pacman_upgrades_pending.prom\n'})}),"\n",(0,a.jsx)(n.p,{children:"Make it executable."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod +x $HOME/custom-metrics/pacman_upgrades.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create a cron job as root to run our script once a day at 1 am."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo EDITOR=nano crontab -e\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"0 1 * * * /home/ada/custom-metrics/pacman_upgrades.sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Restart prometheus-node-xporter."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart prometheus-node-exporter\n"})}),"\n",(0,a.jsx)(n.p,{children:"In Grafana find the 'pacman_upgrades_pending' metric. It will not be available until you fire off the script or cron runs it."}),"\n",(0,a.jsx)(n.h2,{id:"usefull-links",children:"Usefull links"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://nsrc.org/workshops/2021/sanog37/nmm/netmgmt/en/prometheus/ex-custom-metrics.htm",children:"custom-metrics"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://vdwaa.nl/arch-prometheus-monitoring.html",children:"arch prometheus monitoring"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var a=s(6540);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);